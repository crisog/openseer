// @generated by protoc-gen-es v2.8.0 with parameter "target=ts"
// @generated from file openseer/v1/monitors.proto (package openseer.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_struct, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file openseer/v1/monitors.proto.
 */
export const file_openseer_v1_monitors: GenFile = /*@__PURE__*/
  fileDesc("ChpvcGVuc2Vlci92MS9tb25pdG9ycy5wcm90bxILb3BlbnNlZXIudjEigAIKFENyZWF0ZU1vbml0b3JSZXF1ZXN0EgoKAmlkGAEgASgJEgwKBG5hbWUYAiABKAkSCwoDdXJsGAMgASgJEhMKC2ludGVydmFsX21zGAQgASgFEhIKCnRpbWVvdXRfbXMYBSABKAUSDwoHcmVnaW9ucxgGIAMoCRIOCgZtZXRob2QYByABKAkSKAoHaGVhZGVycxgIIAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3QSKwoKYXNzZXJ0aW9ucxgJIAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3QSFAoHZW5hYmxlZBgKIAEoCEgAiAEBQgoKCF9lbmFibGVkIj4KFUNyZWF0ZU1vbml0b3JSZXNwb25zZRIlCgdtb25pdG9yGAEgASgLMhQub3BlbnNlZXIudjEuTW9uaXRvciIfChFHZXRNb25pdG9yUmVxdWVzdBIKCgJpZBgBIAEoCSI7ChJHZXRNb25pdG9yUmVzcG9uc2USJQoHbW9uaXRvchgBIAEoCzIULm9wZW5zZWVyLnYxLk1vbml0b3Ii1AIKFFVwZGF0ZU1vbml0b3JSZXF1ZXN0EgoKAmlkGAEgASgJEhEKBG5hbWUYAiABKAlIAIgBARIQCgN1cmwYAyABKAlIAYgBARIYCgtpbnRlcnZhbF9tcxgEIAEoBUgCiAEBEhcKCnRpbWVvdXRfbXMYBSABKAVIA4gBARIPCgdyZWdpb25zGAYgAygJEhMKBm1ldGhvZBgHIAEoCUgEiAEBEigKB2hlYWRlcnMYCCABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0EisKCmFzc2VydGlvbnMYCSABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0EhQKB2VuYWJsZWQYCiABKAhIBYgBAUIHCgVfbmFtZUIGCgRfdXJsQg4KDF9pbnRlcnZhbF9tc0INCgtfdGltZW91dF9tc0IJCgdfbWV0aG9kQgoKCF9lbmFibGVkIj4KFVVwZGF0ZU1vbml0b3JSZXNwb25zZRIlCgdtb25pdG9yGAEgASgLMhQub3BlbnNlZXIudjEuTW9uaXRvciIVChNMaXN0TW9uaXRvcnNSZXF1ZXN0Ij4KFExpc3RNb25pdG9yc1Jlc3BvbnNlEiYKCG1vbml0b3JzGAEgAygLMhQub3BlbnNlZXIudjEuTW9uaXRvciI9ChhHZXRNb25pdG9yUmVzdWx0c1JlcXVlc3QSEgoKbW9uaXRvcl9pZBgBIAEoCRINCgVsaW1pdBgCIAEoBSJIChlHZXRNb25pdG9yUmVzdWx0c1Jlc3BvbnNlEisKB3Jlc3VsdHMYASADKAsyGi5vcGVuc2Vlci52MS5Nb25pdG9yUmVzdWx0IowBChhHZXRNb25pdG9yTWV0cmljc1JlcXVlc3QSEgoKbW9uaXRvcl9pZBgBIAEoCRIuCgpzdGFydF90aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIsCghlbmRfdGltZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiSQoZR2V0TW9uaXRvck1ldHJpY3NSZXNwb25zZRIsCgdtZXRyaWNzGAEgAygLMhsub3BlbnNlZXIudjEuTW9uaXRvck1ldHJpY3Mi2gMKB01vbml0b3ISCgoCaWQYASABKAkSDAoEbmFtZRgCIAEoCRILCgN1cmwYAyABKAkSEwoLaW50ZXJ2YWxfbXMYBCABKAUSEgoKdGltZW91dF9tcxgFIAEoBRIPCgdyZWdpb25zGAYgAygJEg4KBm1ldGhvZBgHIAEoCRIoCgdoZWFkZXJzGAggASgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdBIrCgphc3NlcnRpb25zGAkgASgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdBIPCgdlbmFibGVkGAogASgIEi4KCmNyZWF0ZWRfYXQYCyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi4KCnVwZGF0ZWRfYXQYDCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjoKEWxhc3Rfc2NoZWR1bGVkX2F0GA0gASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEgAiAEBEjQKC25leHRfZHVlX2F0GA4gASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEgBiAEBQhQKEl9sYXN0X3NjaGVkdWxlZF9hdEIOCgxfbmV4dF9kdWVfYXQi1QMKDU1vbml0b3JSZXN1bHQSDgoGcnVuX2lkGAEgASgJEhIKCm1vbml0b3JfaWQYAiABKAkSDgoGcmVnaW9uGAMgASgJEiwKCGV2ZW50X2F0GAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIOCgZzdGF0dXMYBSABKAkSFgoJaHR0cF9jb2RlGAYgASgFSACIAQESEwoGZG5zX21zGAcgASgFSAGIAQESFwoKY29ubmVjdF9tcxgIIAEoBUgCiAEBEhMKBnRsc19tcxgJIAEoBUgDiAEBEhQKB3R0ZmJfbXMYCiABKAVIBIgBARIYCgtkb3dubG9hZF9tcxgLIAEoBUgFiAEBEhUKCHRvdGFsX21zGAwgASgFSAaIAQESFwoKc2l6ZV9ieXRlcxgNIAEoA0gHiAEBEhoKDWVycm9yX21lc3NhZ2UYDiABKAlICIgBAUIMCgpfaHR0cF9jb2RlQgkKB19kbnNfbXNCDQoLX2Nvbm5lY3RfbXNCCQoHX3Rsc19tc0IKCghfdHRmYl9tc0IOCgxfZG93bmxvYWRfbXNCCwoJX3RvdGFsX21zQg0KC19zaXplX2J5dGVzQhAKDl9lcnJvcl9tZXNzYWdlIvgBCg5Nb25pdG9yTWV0cmljcxISCgptb25pdG9yX2lkGAEgASgJEg4KBnJlZ2lvbhgCIAEoCRIqCgZidWNrZXQYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEg0KBWNvdW50GAQgASgDEhMKC2Vycm9yX2NvdW50GAUgASgDEhIKCmVycm9yX3JhdGUYBiABKAESDgoGcDUwX21zGAcgASgBEg4KBnA5NV9tcxgIIAEoARIOCgZwOTlfbXMYCSABKAESDgoGbWluX21zGAogASgBEg4KBm1heF9tcxgLIAEoARIOCgZhdmdfbXMYDCABKAEiQQoXR2V0TW9uaXRvclVwdGltZVJlcXVlc3QSEgoKbW9uaXRvcl9pZBgBIAEoCRISCgp0aW1lX3JhbmdlGAIgASgJIn0KGEdldE1vbml0b3JVcHRpbWVSZXNwb25zZRIUCgx0b3RhbF9jaGVja3MYASABKAMSGQoRc3VjY2Vzc2Z1bF9jaGVja3MYAiABKAMSFQoNZmFpbGVkX2NoZWNrcxgDIAEoAxIZChF1cHRpbWVfcGVyY2VudGFnZRgEIAEoASJJCh9HZXRNb25pdG9yVXB0aW1lVGltZWxpbmVSZXF1ZXN0EhIKCm1vbml0b3JfaWQYASABKAkSEgoKdGltZV9yYW5nZRgCIAEoCSKNAQoTVXB0aW1lVGltZWxpbmVQb2ludBIqCgZidWNrZXQYASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhQKDHRvdGFsX2NoZWNrcxgCIAEoAxIZChFzdWNjZXNzZnVsX2NoZWNrcxgDIAEoAxIZChF1cHRpbWVfcGVyY2VudGFnZRgEIAEoASJSCiBHZXRNb25pdG9yVXB0aW1lVGltZWxpbmVSZXNwb25zZRIuCgRkYXRhGAEgAygLMiAub3BlbnNlZXIudjEuVXB0aW1lVGltZWxpbmVQb2ludDKXBgoPTW9uaXRvcnNTZXJ2aWNlElgKDUNyZWF0ZU1vbml0b3ISIS5vcGVuc2Vlci52MS5DcmVhdGVNb25pdG9yUmVxdWVzdBoiLm9wZW5zZWVyLnYxLkNyZWF0ZU1vbml0b3JSZXNwb25zZSIAEk8KCkdldE1vbml0b3ISHi5vcGVuc2Vlci52MS5HZXRNb25pdG9yUmVxdWVzdBofLm9wZW5zZWVyLnYxLkdldE1vbml0b3JSZXNwb25zZSIAElgKDVVwZGF0ZU1vbml0b3ISIS5vcGVuc2Vlci52MS5VcGRhdGVNb25pdG9yUmVxdWVzdBoiLm9wZW5zZWVyLnYxLlVwZGF0ZU1vbml0b3JSZXNwb25zZSIAElUKDExpc3RNb25pdG9ycxIgLm9wZW5zZWVyLnYxLkxpc3RNb25pdG9yc1JlcXVlc3QaIS5vcGVuc2Vlci52MS5MaXN0TW9uaXRvcnNSZXNwb25zZSIAEmQKEUdldE1vbml0b3JSZXN1bHRzEiUub3BlbnNlZXIudjEuR2V0TW9uaXRvclJlc3VsdHNSZXF1ZXN0GiYub3BlbnNlZXIudjEuR2V0TW9uaXRvclJlc3VsdHNSZXNwb25zZSIAEmQKEUdldE1vbml0b3JNZXRyaWNzEiUub3BlbnNlZXIudjEuR2V0TW9uaXRvck1ldHJpY3NSZXF1ZXN0GiYub3BlbnNlZXIudjEuR2V0TW9uaXRvck1ldHJpY3NSZXNwb25zZSIAEmEKEEdldE1vbml0b3JVcHRpbWUSJC5vcGVuc2Vlci52MS5HZXRNb25pdG9yVXB0aW1lUmVxdWVzdBolLm9wZW5zZWVyLnYxLkdldE1vbml0b3JVcHRpbWVSZXNwb25zZSIAEnkKGEdldE1vbml0b3JVcHRpbWVUaW1lbGluZRIsLm9wZW5zZWVyLnYxLkdldE1vbml0b3JVcHRpbWVUaW1lbGluZVJlcXVlc3QaLS5vcGVuc2Vlci52MS5HZXRNb25pdG9yVXB0aW1lVGltZWxpbmVSZXNwb25zZSIAQjdaNWdpdGh1Yi5jb20vY3Jpc29nL29wZW5zZWVyL2dlbi9vcGVuc2Vlci92MTtvcGVuc2VlcnYxYgZwcm90bzM", [file_google_protobuf_timestamp, file_google_protobuf_struct]);

/**
 * @generated from message openseer.v1.CreateMonitorRequest
 */
export type CreateMonitorRequest = Message<"openseer.v1.CreateMonitorRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string url = 3;
   */
  url: string;

  /**
   * @generated from field: int32 interval_ms = 4;
   */
  intervalMs: number;

  /**
   * @generated from field: int32 timeout_ms = 5;
   */
  timeoutMs: number;

  /**
   * @generated from field: repeated string regions = 6;
   */
  regions: string[];

  /**
   * @generated from field: string method = 7;
   */
  method: string;

  /**
   * @generated from field: google.protobuf.Struct headers = 8;
   */
  headers?: JsonObject;

  /**
   * @generated from field: google.protobuf.Struct assertions = 9;
   */
  assertions?: JsonObject;

  /**
   * @generated from field: optional bool enabled = 10;
   */
  enabled?: boolean;
};

/**
 * Describes the message openseer.v1.CreateMonitorRequest.
 * Use `create(CreateMonitorRequestSchema)` to create a new message.
 */
export const CreateMonitorRequestSchema: GenMessage<CreateMonitorRequest> = /*@__PURE__*/
  messageDesc(file_openseer_v1_monitors, 0);

/**
 * @generated from message openseer.v1.CreateMonitorResponse
 */
export type CreateMonitorResponse = Message<"openseer.v1.CreateMonitorResponse"> & {
  /**
   * @generated from field: openseer.v1.Monitor monitor = 1;
   */
  monitor?: Monitor;
};

/**
 * Describes the message openseer.v1.CreateMonitorResponse.
 * Use `create(CreateMonitorResponseSchema)` to create a new message.
 */
export const CreateMonitorResponseSchema: GenMessage<CreateMonitorResponse> = /*@__PURE__*/
  messageDesc(file_openseer_v1_monitors, 1);

/**
 * @generated from message openseer.v1.GetMonitorRequest
 */
export type GetMonitorRequest = Message<"openseer.v1.GetMonitorRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message openseer.v1.GetMonitorRequest.
 * Use `create(GetMonitorRequestSchema)` to create a new message.
 */
export const GetMonitorRequestSchema: GenMessage<GetMonitorRequest> = /*@__PURE__*/
  messageDesc(file_openseer_v1_monitors, 2);

/**
 * @generated from message openseer.v1.GetMonitorResponse
 */
export type GetMonitorResponse = Message<"openseer.v1.GetMonitorResponse"> & {
  /**
   * @generated from field: openseer.v1.Monitor monitor = 1;
   */
  monitor?: Monitor;
};

/**
 * Describes the message openseer.v1.GetMonitorResponse.
 * Use `create(GetMonitorResponseSchema)` to create a new message.
 */
export const GetMonitorResponseSchema: GenMessage<GetMonitorResponse> = /*@__PURE__*/
  messageDesc(file_openseer_v1_monitors, 3);

/**
 * @generated from message openseer.v1.UpdateMonitorRequest
 */
export type UpdateMonitorRequest = Message<"openseer.v1.UpdateMonitorRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: optional string name = 2;
   */
  name?: string;

  /**
   * @generated from field: optional string url = 3;
   */
  url?: string;

  /**
   * @generated from field: optional int32 interval_ms = 4;
   */
  intervalMs?: number;

  /**
   * @generated from field: optional int32 timeout_ms = 5;
   */
  timeoutMs?: number;

  /**
   * @generated from field: repeated string regions = 6;
   */
  regions: string[];

  /**
   * @generated from field: optional string method = 7;
   */
  method?: string;

  /**
   * @generated from field: google.protobuf.Struct headers = 8;
   */
  headers?: JsonObject;

  /**
   * @generated from field: google.protobuf.Struct assertions = 9;
   */
  assertions?: JsonObject;

  /**
   * @generated from field: optional bool enabled = 10;
   */
  enabled?: boolean;
};

/**
 * Describes the message openseer.v1.UpdateMonitorRequest.
 * Use `create(UpdateMonitorRequestSchema)` to create a new message.
 */
export const UpdateMonitorRequestSchema: GenMessage<UpdateMonitorRequest> = /*@__PURE__*/
  messageDesc(file_openseer_v1_monitors, 4);

/**
 * @generated from message openseer.v1.UpdateMonitorResponse
 */
export type UpdateMonitorResponse = Message<"openseer.v1.UpdateMonitorResponse"> & {
  /**
   * @generated from field: openseer.v1.Monitor monitor = 1;
   */
  monitor?: Monitor;
};

/**
 * Describes the message openseer.v1.UpdateMonitorResponse.
 * Use `create(UpdateMonitorResponseSchema)` to create a new message.
 */
export const UpdateMonitorResponseSchema: GenMessage<UpdateMonitorResponse> = /*@__PURE__*/
  messageDesc(file_openseer_v1_monitors, 5);

/**
 * Empty for now, can add pagination later
 *
 * @generated from message openseer.v1.ListMonitorsRequest
 */
export type ListMonitorsRequest = Message<"openseer.v1.ListMonitorsRequest"> & {
};

/**
 * Describes the message openseer.v1.ListMonitorsRequest.
 * Use `create(ListMonitorsRequestSchema)` to create a new message.
 */
export const ListMonitorsRequestSchema: GenMessage<ListMonitorsRequest> = /*@__PURE__*/
  messageDesc(file_openseer_v1_monitors, 6);

/**
 * @generated from message openseer.v1.ListMonitorsResponse
 */
export type ListMonitorsResponse = Message<"openseer.v1.ListMonitorsResponse"> & {
  /**
   * @generated from field: repeated openseer.v1.Monitor monitors = 1;
   */
  monitors: Monitor[];
};

/**
 * Describes the message openseer.v1.ListMonitorsResponse.
 * Use `create(ListMonitorsResponseSchema)` to create a new message.
 */
export const ListMonitorsResponseSchema: GenMessage<ListMonitorsResponse> = /*@__PURE__*/
  messageDesc(file_openseer_v1_monitors, 7);

/**
 * @generated from message openseer.v1.GetMonitorResultsRequest
 */
export type GetMonitorResultsRequest = Message<"openseer.v1.GetMonitorResultsRequest"> & {
  /**
   * @generated from field: string monitor_id = 1;
   */
  monitorId: string;

  /**
   * @generated from field: int32 limit = 2;
   */
  limit: number;
};

/**
 * Describes the message openseer.v1.GetMonitorResultsRequest.
 * Use `create(GetMonitorResultsRequestSchema)` to create a new message.
 */
export const GetMonitorResultsRequestSchema: GenMessage<GetMonitorResultsRequest> = /*@__PURE__*/
  messageDesc(file_openseer_v1_monitors, 8);

/**
 * @generated from message openseer.v1.GetMonitorResultsResponse
 */
export type GetMonitorResultsResponse = Message<"openseer.v1.GetMonitorResultsResponse"> & {
  /**
   * @generated from field: repeated openseer.v1.MonitorResult results = 1;
   */
  results: MonitorResult[];
};

/**
 * Describes the message openseer.v1.GetMonitorResultsResponse.
 * Use `create(GetMonitorResultsResponseSchema)` to create a new message.
 */
export const GetMonitorResultsResponseSchema: GenMessage<GetMonitorResultsResponse> = /*@__PURE__*/
  messageDesc(file_openseer_v1_monitors, 9);

/**
 * @generated from message openseer.v1.GetMonitorMetricsRequest
 */
export type GetMonitorMetricsRequest = Message<"openseer.v1.GetMonitorMetricsRequest"> & {
  /**
   * @generated from field: string monitor_id = 1;
   */
  monitorId: string;

  /**
   * @generated from field: google.protobuf.Timestamp start_time = 2;
   */
  startTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp end_time = 3;
   */
  endTime?: Timestamp;
};

/**
 * Describes the message openseer.v1.GetMonitorMetricsRequest.
 * Use `create(GetMonitorMetricsRequestSchema)` to create a new message.
 */
export const GetMonitorMetricsRequestSchema: GenMessage<GetMonitorMetricsRequest> = /*@__PURE__*/
  messageDesc(file_openseer_v1_monitors, 10);

/**
 * @generated from message openseer.v1.GetMonitorMetricsResponse
 */
export type GetMonitorMetricsResponse = Message<"openseer.v1.GetMonitorMetricsResponse"> & {
  /**
   * @generated from field: repeated openseer.v1.MonitorMetrics metrics = 1;
   */
  metrics: MonitorMetrics[];
};

/**
 * Describes the message openseer.v1.GetMonitorMetricsResponse.
 * Use `create(GetMonitorMetricsResponseSchema)` to create a new message.
 */
export const GetMonitorMetricsResponseSchema: GenMessage<GetMonitorMetricsResponse> = /*@__PURE__*/
  messageDesc(file_openseer_v1_monitors, 11);

/**
 * @generated from message openseer.v1.Monitor
 */
export type Monitor = Message<"openseer.v1.Monitor"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string url = 3;
   */
  url: string;

  /**
   * @generated from field: int32 interval_ms = 4;
   */
  intervalMs: number;

  /**
   * @generated from field: int32 timeout_ms = 5;
   */
  timeoutMs: number;

  /**
   * @generated from field: repeated string regions = 6;
   */
  regions: string[];

  /**
   * @generated from field: string method = 7;
   */
  method: string;

  /**
   * @generated from field: google.protobuf.Struct headers = 8;
   */
  headers?: JsonObject;

  /**
   * @generated from field: google.protobuf.Struct assertions = 9;
   */
  assertions?: JsonObject;

  /**
   * @generated from field: bool enabled = 10;
   */
  enabled: boolean;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 11;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 12;
   */
  updatedAt?: Timestamp;

  /**
   * @generated from field: optional google.protobuf.Timestamp last_scheduled_at = 13;
   */
  lastScheduledAt?: Timestamp;

  /**
   * @generated from field: optional google.protobuf.Timestamp next_due_at = 14;
   */
  nextDueAt?: Timestamp;
};

/**
 * Describes the message openseer.v1.Monitor.
 * Use `create(MonitorSchema)` to create a new message.
 */
export const MonitorSchema: GenMessage<Monitor> = /*@__PURE__*/
  messageDesc(file_openseer_v1_monitors, 12);

/**
 * @generated from message openseer.v1.MonitorResult
 */
export type MonitorResult = Message<"openseer.v1.MonitorResult"> & {
  /**
   * @generated from field: string run_id = 1;
   */
  runId: string;

  /**
   * @generated from field: string monitor_id = 2;
   */
  monitorId: string;

  /**
   * @generated from field: string region = 3;
   */
  region: string;

  /**
   * @generated from field: google.protobuf.Timestamp event_at = 4;
   */
  eventAt?: Timestamp;

  /**
   * @generated from field: string status = 5;
   */
  status: string;

  /**
   * @generated from field: optional int32 http_code = 6;
   */
  httpCode?: number;

  /**
   * @generated from field: optional int32 dns_ms = 7;
   */
  dnsMs?: number;

  /**
   * @generated from field: optional int32 connect_ms = 8;
   */
  connectMs?: number;

  /**
   * @generated from field: optional int32 tls_ms = 9;
   */
  tlsMs?: number;

  /**
   * @generated from field: optional int32 ttfb_ms = 10;
   */
  ttfbMs?: number;

  /**
   * @generated from field: optional int32 download_ms = 11;
   */
  downloadMs?: number;

  /**
   * @generated from field: optional int32 total_ms = 12;
   */
  totalMs?: number;

  /**
   * @generated from field: optional int64 size_bytes = 13;
   */
  sizeBytes?: bigint;

  /**
   * @generated from field: optional string error_message = 14;
   */
  errorMessage?: string;
};

/**
 * Describes the message openseer.v1.MonitorResult.
 * Use `create(MonitorResultSchema)` to create a new message.
 */
export const MonitorResultSchema: GenMessage<MonitorResult> = /*@__PURE__*/
  messageDesc(file_openseer_v1_monitors, 13);

/**
 * @generated from message openseer.v1.MonitorMetrics
 */
export type MonitorMetrics = Message<"openseer.v1.MonitorMetrics"> & {
  /**
   * @generated from field: string monitor_id = 1;
   */
  monitorId: string;

  /**
   * @generated from field: string region = 2;
   */
  region: string;

  /**
   * @generated from field: google.protobuf.Timestamp bucket = 3;
   */
  bucket?: Timestamp;

  /**
   * @generated from field: int64 count = 4;
   */
  count: bigint;

  /**
   * @generated from field: int64 error_count = 5;
   */
  errorCount: bigint;

  /**
   * @generated from field: double error_rate = 6;
   */
  errorRate: number;

  /**
   * @generated from field: double p50_ms = 7;
   */
  p50Ms: number;

  /**
   * @generated from field: double p95_ms = 8;
   */
  p95Ms: number;

  /**
   * @generated from field: double p99_ms = 9;
   */
  p99Ms: number;

  /**
   * @generated from field: double min_ms = 10;
   */
  minMs: number;

  /**
   * @generated from field: double max_ms = 11;
   */
  maxMs: number;

  /**
   * @generated from field: double avg_ms = 12;
   */
  avgMs: number;
};

/**
 * Describes the message openseer.v1.MonitorMetrics.
 * Use `create(MonitorMetricsSchema)` to create a new message.
 */
export const MonitorMetricsSchema: GenMessage<MonitorMetrics> = /*@__PURE__*/
  messageDesc(file_openseer_v1_monitors, 14);

/**
 * @generated from message openseer.v1.GetMonitorUptimeRequest
 */
export type GetMonitorUptimeRequest = Message<"openseer.v1.GetMonitorUptimeRequest"> & {
  /**
   * @generated from field: string monitor_id = 1;
   */
  monitorId: string;

  /**
   * "24h", "7d", or "30d"
   *
   * @generated from field: string time_range = 2;
   */
  timeRange: string;
};

/**
 * Describes the message openseer.v1.GetMonitorUptimeRequest.
 * Use `create(GetMonitorUptimeRequestSchema)` to create a new message.
 */
export const GetMonitorUptimeRequestSchema: GenMessage<GetMonitorUptimeRequest> = /*@__PURE__*/
  messageDesc(file_openseer_v1_monitors, 15);

/**
 * @generated from message openseer.v1.GetMonitorUptimeResponse
 */
export type GetMonitorUptimeResponse = Message<"openseer.v1.GetMonitorUptimeResponse"> & {
  /**
   * @generated from field: int64 total_checks = 1;
   */
  totalChecks: bigint;

  /**
   * @generated from field: int64 successful_checks = 2;
   */
  successfulChecks: bigint;

  /**
   * @generated from field: int64 failed_checks = 3;
   */
  failedChecks: bigint;

  /**
   * @generated from field: double uptime_percentage = 4;
   */
  uptimePercentage: number;
};

/**
 * Describes the message openseer.v1.GetMonitorUptimeResponse.
 * Use `create(GetMonitorUptimeResponseSchema)` to create a new message.
 */
export const GetMonitorUptimeResponseSchema: GenMessage<GetMonitorUptimeResponse> = /*@__PURE__*/
  messageDesc(file_openseer_v1_monitors, 16);

/**
 * @generated from message openseer.v1.GetMonitorUptimeTimelineRequest
 */
export type GetMonitorUptimeTimelineRequest = Message<"openseer.v1.GetMonitorUptimeTimelineRequest"> & {
  /**
   * @generated from field: string monitor_id = 1;
   */
  monitorId: string;

  /**
   * "24h", "7d", or "30d"
   *
   * @generated from field: string time_range = 2;
   */
  timeRange: string;
};

/**
 * Describes the message openseer.v1.GetMonitorUptimeTimelineRequest.
 * Use `create(GetMonitorUptimeTimelineRequestSchema)` to create a new message.
 */
export const GetMonitorUptimeTimelineRequestSchema: GenMessage<GetMonitorUptimeTimelineRequest> = /*@__PURE__*/
  messageDesc(file_openseer_v1_monitors, 17);

/**
 * @generated from message openseer.v1.UptimeTimelinePoint
 */
export type UptimeTimelinePoint = Message<"openseer.v1.UptimeTimelinePoint"> & {
  /**
   * @generated from field: google.protobuf.Timestamp bucket = 1;
   */
  bucket?: Timestamp;

  /**
   * @generated from field: int64 total_checks = 2;
   */
  totalChecks: bigint;

  /**
   * @generated from field: int64 successful_checks = 3;
   */
  successfulChecks: bigint;

  /**
   * @generated from field: double uptime_percentage = 4;
   */
  uptimePercentage: number;
};

/**
 * Describes the message openseer.v1.UptimeTimelinePoint.
 * Use `create(UptimeTimelinePointSchema)` to create a new message.
 */
export const UptimeTimelinePointSchema: GenMessage<UptimeTimelinePoint> = /*@__PURE__*/
  messageDesc(file_openseer_v1_monitors, 18);

/**
 * @generated from message openseer.v1.GetMonitorUptimeTimelineResponse
 */
export type GetMonitorUptimeTimelineResponse = Message<"openseer.v1.GetMonitorUptimeTimelineResponse"> & {
  /**
   * @generated from field: repeated openseer.v1.UptimeTimelinePoint data = 1;
   */
  data: UptimeTimelinePoint[];
};

/**
 * Describes the message openseer.v1.GetMonitorUptimeTimelineResponse.
 * Use `create(GetMonitorUptimeTimelineResponseSchema)` to create a new message.
 */
export const GetMonitorUptimeTimelineResponseSchema: GenMessage<GetMonitorUptimeTimelineResponse> = /*@__PURE__*/
  messageDesc(file_openseer_v1_monitors, 19);

/**
 * @generated from service openseer.v1.MonitorsService
 */
export const MonitorsService: GenService<{
  /**
   * @generated from rpc openseer.v1.MonitorsService.CreateMonitor
   */
  createMonitor: {
    methodKind: "unary";
    input: typeof CreateMonitorRequestSchema;
    output: typeof CreateMonitorResponseSchema;
  },
  /**
   * @generated from rpc openseer.v1.MonitorsService.GetMonitor
   */
  getMonitor: {
    methodKind: "unary";
    input: typeof GetMonitorRequestSchema;
    output: typeof GetMonitorResponseSchema;
  },
  /**
   * @generated from rpc openseer.v1.MonitorsService.UpdateMonitor
   */
  updateMonitor: {
    methodKind: "unary";
    input: typeof UpdateMonitorRequestSchema;
    output: typeof UpdateMonitorResponseSchema;
  },
  /**
   * @generated from rpc openseer.v1.MonitorsService.ListMonitors
   */
  listMonitors: {
    methodKind: "unary";
    input: typeof ListMonitorsRequestSchema;
    output: typeof ListMonitorsResponseSchema;
  },
  /**
   * @generated from rpc openseer.v1.MonitorsService.GetMonitorResults
   */
  getMonitorResults: {
    methodKind: "unary";
    input: typeof GetMonitorResultsRequestSchema;
    output: typeof GetMonitorResultsResponseSchema;
  },
  /**
   * @generated from rpc openseer.v1.MonitorsService.GetMonitorMetrics
   */
  getMonitorMetrics: {
    methodKind: "unary";
    input: typeof GetMonitorMetricsRequestSchema;
    output: typeof GetMonitorMetricsResponseSchema;
  },
  /**
   * @generated from rpc openseer.v1.MonitorsService.GetMonitorUptime
   */
  getMonitorUptime: {
    methodKind: "unary";
    input: typeof GetMonitorUptimeRequestSchema;
    output: typeof GetMonitorUptimeResponseSchema;
  },
  /**
   * @generated from rpc openseer.v1.MonitorsService.GetMonitorUptimeTimeline
   */
  getMonitorUptimeTimeline: {
    methodKind: "unary";
    input: typeof GetMonitorUptimeTimelineRequestSchema;
    output: typeof GetMonitorUptimeTimelineResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_openseer_v1_monitors, 0);

