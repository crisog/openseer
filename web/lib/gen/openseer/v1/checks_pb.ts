// @generated by protoc-gen-es v2.8.0 with parameter "target=ts"
// @generated from file openseer/v1/checks.proto (package openseer.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_struct, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file openseer/v1/checks.proto.
 */
export const file_openseer_v1_checks: GenFile = /*@__PURE__*/
  fileDesc("ChhvcGVuc2Vlci92MS9jaGVja3MucHJvdG8SC29wZW5zZWVyLnYxIvABChJDcmVhdGVDaGVja1JlcXVlc3QSCgoCaWQYASABKAkSCwoDdXJsGAIgASgJEhMKC2ludGVydmFsX21zGAMgASgFEhIKCnRpbWVvdXRfbXMYBCABKAUSDwoHcmVnaW9ucxgFIAMoCRIOCgZtZXRob2QYBiABKAkSKAoHaGVhZGVycxgHIAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3QSKwoKYXNzZXJ0aW9ucxgIIAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3QSFAoHZW5hYmxlZBgJIAEoCEgAiAEBQgoKCF9lbmFibGVkIjgKE0NyZWF0ZUNoZWNrUmVzcG9uc2USIQoFY2hlY2sYASABKAsyEi5vcGVuc2Vlci52MS5DaGVjayIdCg9HZXRDaGVja1JlcXVlc3QSCgoCaWQYASABKAkiNQoQR2V0Q2hlY2tSZXNwb25zZRIhCgVjaGVjaxgBIAEoCzISLm9wZW5zZWVyLnYxLkNoZWNrIhMKEUxpc3RDaGVja3NSZXF1ZXN0IjgKEkxpc3RDaGVja3NSZXNwb25zZRIiCgZjaGVja3MYASADKAsyEi5vcGVuc2Vlci52MS5DaGVjayI5ChZHZXRDaGVja1Jlc3VsdHNSZXF1ZXN0EhAKCGNoZWNrX2lkGAEgASgJEg0KBWxpbWl0GAIgASgFIkQKF0dldENoZWNrUmVzdWx0c1Jlc3BvbnNlEikKB3Jlc3VsdHMYASADKAsyGC5vcGVuc2Vlci52MS5DaGVja1Jlc3VsdCKIAQoWR2V0Q2hlY2tNZXRyaWNzUmVxdWVzdBIQCghjaGVja19pZBgBIAEoCRIuCgpzdGFydF90aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIsCghlbmRfdGltZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiRQoXR2V0Q2hlY2tNZXRyaWNzUmVzcG9uc2USKgoHbWV0cmljcxgBIAMoCzIZLm9wZW5zZWVyLnYxLkNoZWNrTWV0cmljcyLKAwoFQ2hlY2sSCgoCaWQYASABKAkSCwoDdXJsGAIgASgJEhMKC2ludGVydmFsX21zGAMgASgFEhIKCnRpbWVvdXRfbXMYBCABKAUSDwoHcmVnaW9ucxgFIAMoCRIOCgZtZXRob2QYBiABKAkSKAoHaGVhZGVycxgHIAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3QSKwoKYXNzZXJ0aW9ucxgIIAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3QSDwoHZW5hYmxlZBgJIAEoCBIuCgpjcmVhdGVkX2F0GAogASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIuCgp1cGRhdGVkX2F0GAsgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBI6ChFsYXN0X3NjaGVkdWxlZF9hdBgMIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBIAIgBARI0CgtuZXh0X2R1ZV9hdBgNIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBIAYgBAUIUChJfbGFzdF9zY2hlZHVsZWRfYXRCDgoMX25leHRfZHVlX2F0ItEDCgtDaGVja1Jlc3VsdBIOCgZydW5faWQYASABKAkSEAoIY2hlY2tfaWQYAiABKAkSDgoGcmVnaW9uGAMgASgJEiwKCGV2ZW50X2F0GAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIOCgZzdGF0dXMYBSABKAkSFgoJaHR0cF9jb2RlGAYgASgFSACIAQESEwoGZG5zX21zGAcgASgFSAGIAQESFwoKY29ubmVjdF9tcxgIIAEoBUgCiAEBEhMKBnRsc19tcxgJIAEoBUgDiAEBEhQKB3R0ZmJfbXMYCiABKAVIBIgBARIYCgtkb3dubG9hZF9tcxgLIAEoBUgFiAEBEhUKCHRvdGFsX21zGAwgASgFSAaIAQESFwoKc2l6ZV9ieXRlcxgNIAEoA0gHiAEBEhoKDWVycm9yX21lc3NhZ2UYDiABKAlICIgBAUIMCgpfaHR0cF9jb2RlQgkKB19kbnNfbXNCDQoLX2Nvbm5lY3RfbXNCCQoHX3Rsc19tc0IKCghfdHRmYl9tc0IOCgxfZG93bmxvYWRfbXNCCwoJX3RvdGFsX21zQg0KC19zaXplX2J5dGVzQhAKDl9lcnJvcl9tZXNzYWdlIvQBCgxDaGVja01ldHJpY3MSEAoIY2hlY2tfaWQYASABKAkSDgoGcmVnaW9uGAIgASgJEioKBmJ1Y2tldBgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASDQoFY291bnQYBCABKAMSEwoLZXJyb3JfY291bnQYBSABKAMSEgoKZXJyb3JfcmF0ZRgGIAEoARIOCgZwNTBfbXMYByABKAESDgoGcDk1X21zGAggASgBEg4KBnA5OV9tcxgJIAEoARIOCgZtaW5fbXMYCiABKAESDgoGbWF4X21zGAsgASgBEg4KBmF2Z19tcxgMIAEoATK/AwoNQ2hlY2tzU2VydmljZRJSCgtDcmVhdGVDaGVjaxIfLm9wZW5zZWVyLnYxLkNyZWF0ZUNoZWNrUmVxdWVzdBogLm9wZW5zZWVyLnYxLkNyZWF0ZUNoZWNrUmVzcG9uc2UiABJJCghHZXRDaGVjaxIcLm9wZW5zZWVyLnYxLkdldENoZWNrUmVxdWVzdBodLm9wZW5zZWVyLnYxLkdldENoZWNrUmVzcG9uc2UiABJPCgpMaXN0Q2hlY2tzEh4ub3BlbnNlZXIudjEuTGlzdENoZWNrc1JlcXVlc3QaHy5vcGVuc2Vlci52MS5MaXN0Q2hlY2tzUmVzcG9uc2UiABJeCg9HZXRDaGVja1Jlc3VsdHMSIy5vcGVuc2Vlci52MS5HZXRDaGVja1Jlc3VsdHNSZXF1ZXN0GiQub3BlbnNlZXIudjEuR2V0Q2hlY2tSZXN1bHRzUmVzcG9uc2UiABJeCg9HZXRDaGVja01ldHJpY3MSIy5vcGVuc2Vlci52MS5HZXRDaGVja01ldHJpY3NSZXF1ZXN0GiQub3BlbnNlZXIudjEuR2V0Q2hlY2tNZXRyaWNzUmVzcG9uc2UiAEI3WjVnaXRodWIuY29tL2NyaXNvZy9vcGVuc2Vlci9nZW4vb3BlbnNlZXIvdjE7b3BlbnNlZXJ2MWIGcHJvdG8z", [file_google_protobuf_timestamp, file_google_protobuf_struct]);

/**
 * @generated from message openseer.v1.CreateCheckRequest
 */
export type CreateCheckRequest = Message<"openseer.v1.CreateCheckRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string url = 2;
   */
  url: string;

  /**
   * @generated from field: int32 interval_ms = 3;
   */
  intervalMs: number;

  /**
   * @generated from field: int32 timeout_ms = 4;
   */
  timeoutMs: number;

  /**
   * @generated from field: repeated string regions = 5;
   */
  regions: string[];

  /**
   * @generated from field: string method = 6;
   */
  method: string;

  /**
   * @generated from field: google.protobuf.Struct headers = 7;
   */
  headers?: JsonObject;

  /**
   * @generated from field: google.protobuf.Struct assertions = 8;
   */
  assertions?: JsonObject;

  /**
   * @generated from field: optional bool enabled = 9;
   */
  enabled?: boolean;
};

/**
 * Describes the message openseer.v1.CreateCheckRequest.
 * Use `create(CreateCheckRequestSchema)` to create a new message.
 */
export const CreateCheckRequestSchema: GenMessage<CreateCheckRequest> = /*@__PURE__*/
  messageDesc(file_openseer_v1_checks, 0);

/**
 * @generated from message openseer.v1.CreateCheckResponse
 */
export type CreateCheckResponse = Message<"openseer.v1.CreateCheckResponse"> & {
  /**
   * @generated from field: openseer.v1.Check check = 1;
   */
  check?: Check;
};

/**
 * Describes the message openseer.v1.CreateCheckResponse.
 * Use `create(CreateCheckResponseSchema)` to create a new message.
 */
export const CreateCheckResponseSchema: GenMessage<CreateCheckResponse> = /*@__PURE__*/
  messageDesc(file_openseer_v1_checks, 1);

/**
 * @generated from message openseer.v1.GetCheckRequest
 */
export type GetCheckRequest = Message<"openseer.v1.GetCheckRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message openseer.v1.GetCheckRequest.
 * Use `create(GetCheckRequestSchema)` to create a new message.
 */
export const GetCheckRequestSchema: GenMessage<GetCheckRequest> = /*@__PURE__*/
  messageDesc(file_openseer_v1_checks, 2);

/**
 * @generated from message openseer.v1.GetCheckResponse
 */
export type GetCheckResponse = Message<"openseer.v1.GetCheckResponse"> & {
  /**
   * @generated from field: openseer.v1.Check check = 1;
   */
  check?: Check;
};

/**
 * Describes the message openseer.v1.GetCheckResponse.
 * Use `create(GetCheckResponseSchema)` to create a new message.
 */
export const GetCheckResponseSchema: GenMessage<GetCheckResponse> = /*@__PURE__*/
  messageDesc(file_openseer_v1_checks, 3);

/**
 * Empty for now, can add pagination later
 *
 * @generated from message openseer.v1.ListChecksRequest
 */
export type ListChecksRequest = Message<"openseer.v1.ListChecksRequest"> & {
};

/**
 * Describes the message openseer.v1.ListChecksRequest.
 * Use `create(ListChecksRequestSchema)` to create a new message.
 */
export const ListChecksRequestSchema: GenMessage<ListChecksRequest> = /*@__PURE__*/
  messageDesc(file_openseer_v1_checks, 4);

/**
 * @generated from message openseer.v1.ListChecksResponse
 */
export type ListChecksResponse = Message<"openseer.v1.ListChecksResponse"> & {
  /**
   * @generated from field: repeated openseer.v1.Check checks = 1;
   */
  checks: Check[];
};

/**
 * Describes the message openseer.v1.ListChecksResponse.
 * Use `create(ListChecksResponseSchema)` to create a new message.
 */
export const ListChecksResponseSchema: GenMessage<ListChecksResponse> = /*@__PURE__*/
  messageDesc(file_openseer_v1_checks, 5);

/**
 * @generated from message openseer.v1.GetCheckResultsRequest
 */
export type GetCheckResultsRequest = Message<"openseer.v1.GetCheckResultsRequest"> & {
  /**
   * @generated from field: string check_id = 1;
   */
  checkId: string;

  /**
   * @generated from field: int32 limit = 2;
   */
  limit: number;
};

/**
 * Describes the message openseer.v1.GetCheckResultsRequest.
 * Use `create(GetCheckResultsRequestSchema)` to create a new message.
 */
export const GetCheckResultsRequestSchema: GenMessage<GetCheckResultsRequest> = /*@__PURE__*/
  messageDesc(file_openseer_v1_checks, 6);

/**
 * @generated from message openseer.v1.GetCheckResultsResponse
 */
export type GetCheckResultsResponse = Message<"openseer.v1.GetCheckResultsResponse"> & {
  /**
   * @generated from field: repeated openseer.v1.CheckResult results = 1;
   */
  results: CheckResult[];
};

/**
 * Describes the message openseer.v1.GetCheckResultsResponse.
 * Use `create(GetCheckResultsResponseSchema)` to create a new message.
 */
export const GetCheckResultsResponseSchema: GenMessage<GetCheckResultsResponse> = /*@__PURE__*/
  messageDesc(file_openseer_v1_checks, 7);

/**
 * @generated from message openseer.v1.GetCheckMetricsRequest
 */
export type GetCheckMetricsRequest = Message<"openseer.v1.GetCheckMetricsRequest"> & {
  /**
   * @generated from field: string check_id = 1;
   */
  checkId: string;

  /**
   * @generated from field: google.protobuf.Timestamp start_time = 2;
   */
  startTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp end_time = 3;
   */
  endTime?: Timestamp;
};

/**
 * Describes the message openseer.v1.GetCheckMetricsRequest.
 * Use `create(GetCheckMetricsRequestSchema)` to create a new message.
 */
export const GetCheckMetricsRequestSchema: GenMessage<GetCheckMetricsRequest> = /*@__PURE__*/
  messageDesc(file_openseer_v1_checks, 8);

/**
 * @generated from message openseer.v1.GetCheckMetricsResponse
 */
export type GetCheckMetricsResponse = Message<"openseer.v1.GetCheckMetricsResponse"> & {
  /**
   * @generated from field: repeated openseer.v1.CheckMetrics metrics = 1;
   */
  metrics: CheckMetrics[];
};

/**
 * Describes the message openseer.v1.GetCheckMetricsResponse.
 * Use `create(GetCheckMetricsResponseSchema)` to create a new message.
 */
export const GetCheckMetricsResponseSchema: GenMessage<GetCheckMetricsResponse> = /*@__PURE__*/
  messageDesc(file_openseer_v1_checks, 9);

/**
 * @generated from message openseer.v1.Check
 */
export type Check = Message<"openseer.v1.Check"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string url = 2;
   */
  url: string;

  /**
   * @generated from field: int32 interval_ms = 3;
   */
  intervalMs: number;

  /**
   * @generated from field: int32 timeout_ms = 4;
   */
  timeoutMs: number;

  /**
   * @generated from field: repeated string regions = 5;
   */
  regions: string[];

  /**
   * @generated from field: string method = 6;
   */
  method: string;

  /**
   * @generated from field: google.protobuf.Struct headers = 7;
   */
  headers?: JsonObject;

  /**
   * @generated from field: google.protobuf.Struct assertions = 8;
   */
  assertions?: JsonObject;

  /**
   * @generated from field: bool enabled = 9;
   */
  enabled: boolean;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 10;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 11;
   */
  updatedAt?: Timestamp;

  /**
   * @generated from field: optional google.protobuf.Timestamp last_scheduled_at = 12;
   */
  lastScheduledAt?: Timestamp;

  /**
   * @generated from field: optional google.protobuf.Timestamp next_due_at = 13;
   */
  nextDueAt?: Timestamp;
};

/**
 * Describes the message openseer.v1.Check.
 * Use `create(CheckSchema)` to create a new message.
 */
export const CheckSchema: GenMessage<Check> = /*@__PURE__*/
  messageDesc(file_openseer_v1_checks, 10);

/**
 * @generated from message openseer.v1.CheckResult
 */
export type CheckResult = Message<"openseer.v1.CheckResult"> & {
  /**
   * @generated from field: string run_id = 1;
   */
  runId: string;

  /**
   * @generated from field: string check_id = 2;
   */
  checkId: string;

  /**
   * @generated from field: string region = 3;
   */
  region: string;

  /**
   * @generated from field: google.protobuf.Timestamp event_at = 4;
   */
  eventAt?: Timestamp;

  /**
   * @generated from field: string status = 5;
   */
  status: string;

  /**
   * @generated from field: optional int32 http_code = 6;
   */
  httpCode?: number;

  /**
   * @generated from field: optional int32 dns_ms = 7;
   */
  dnsMs?: number;

  /**
   * @generated from field: optional int32 connect_ms = 8;
   */
  connectMs?: number;

  /**
   * @generated from field: optional int32 tls_ms = 9;
   */
  tlsMs?: number;

  /**
   * @generated from field: optional int32 ttfb_ms = 10;
   */
  ttfbMs?: number;

  /**
   * @generated from field: optional int32 download_ms = 11;
   */
  downloadMs?: number;

  /**
   * @generated from field: optional int32 total_ms = 12;
   */
  totalMs?: number;

  /**
   * @generated from field: optional int64 size_bytes = 13;
   */
  sizeBytes?: bigint;

  /**
   * @generated from field: optional string error_message = 14;
   */
  errorMessage?: string;
};

/**
 * Describes the message openseer.v1.CheckResult.
 * Use `create(CheckResultSchema)` to create a new message.
 */
export const CheckResultSchema: GenMessage<CheckResult> = /*@__PURE__*/
  messageDesc(file_openseer_v1_checks, 11);

/**
 * @generated from message openseer.v1.CheckMetrics
 */
export type CheckMetrics = Message<"openseer.v1.CheckMetrics"> & {
  /**
   * @generated from field: string check_id = 1;
   */
  checkId: string;

  /**
   * @generated from field: string region = 2;
   */
  region: string;

  /**
   * @generated from field: google.protobuf.Timestamp bucket = 3;
   */
  bucket?: Timestamp;

  /**
   * @generated from field: int64 count = 4;
   */
  count: bigint;

  /**
   * @generated from field: int64 error_count = 5;
   */
  errorCount: bigint;

  /**
   * @generated from field: double error_rate = 6;
   */
  errorRate: number;

  /**
   * @generated from field: double p50_ms = 7;
   */
  p50Ms: number;

  /**
   * @generated from field: double p95_ms = 8;
   */
  p95Ms: number;

  /**
   * @generated from field: double p99_ms = 9;
   */
  p99Ms: number;

  /**
   * @generated from field: double min_ms = 10;
   */
  minMs: number;

  /**
   * @generated from field: double max_ms = 11;
   */
  maxMs: number;

  /**
   * @generated from field: double avg_ms = 12;
   */
  avgMs: number;
};

/**
 * Describes the message openseer.v1.CheckMetrics.
 * Use `create(CheckMetricsSchema)` to create a new message.
 */
export const CheckMetricsSchema: GenMessage<CheckMetrics> = /*@__PURE__*/
  messageDesc(file_openseer_v1_checks, 12);

/**
 * @generated from service openseer.v1.ChecksService
 */
export const ChecksService: GenService<{
  /**
   * @generated from rpc openseer.v1.ChecksService.CreateCheck
   */
  createCheck: {
    methodKind: "unary";
    input: typeof CreateCheckRequestSchema;
    output: typeof CreateCheckResponseSchema;
  },
  /**
   * @generated from rpc openseer.v1.ChecksService.GetCheck
   */
  getCheck: {
    methodKind: "unary";
    input: typeof GetCheckRequestSchema;
    output: typeof GetCheckResponseSchema;
  },
  /**
   * @generated from rpc openseer.v1.ChecksService.ListChecks
   */
  listChecks: {
    methodKind: "unary";
    input: typeof ListChecksRequestSchema;
    output: typeof ListChecksResponseSchema;
  },
  /**
   * @generated from rpc openseer.v1.ChecksService.GetCheckResults
   */
  getCheckResults: {
    methodKind: "unary";
    input: typeof GetCheckResultsRequestSchema;
    output: typeof GetCheckResultsResponseSchema;
  },
  /**
   * @generated from rpc openseer.v1.ChecksService.GetCheckMetrics
   */
  getCheckMetrics: {
    methodKind: "unary";
    input: typeof GetCheckMetricsRequestSchema;
    output: typeof GetCheckMetricsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_openseer_v1_checks, 0);

