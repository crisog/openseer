// @generated by protoc-gen-es v2.8.0 with parameter "target=ts"
// @generated from file openseer/v1/worker.proto (package openseer.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { MonitorResult } from "./monitors_pb";
import { file_openseer_v1_monitors } from "./monitors_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file openseer/v1/worker.proto.
 */
export const file_openseer_v1_worker: GenFile = /*@__PURE__*/
  fileDesc("ChhvcGVuc2Vlci92MS93b3JrZXIucHJvdG8SC29wZW5zZWVyLnYxIoECCg1Xb3JrZXJNZXNzYWdlEjAKCHJlZ2lzdGVyGAEgASgLMhwub3BlbnNlZXIudjEuUmVnaXN0ZXJSZXF1ZXN0SAASLgoLam9iX3JlcXVlc3QYAiABKAsyFy5vcGVuc2Vlci52MS5Kb2JSZXF1ZXN0SAASLAoGcmVzdWx0GAMgASgLMhoub3BlbnNlZXIudjEuTW9uaXRvclJlc3VsdEgAEjIKDWxlYXNlX3JlbmV3YWwYBCABKAsyGS5vcGVuc2Vlci52MS5MZWFzZVJlbmV3YWxIABIhCgRwb25nGAUgASgLMhEub3BlbnNlZXIudjEuUG9uZ0gAQgkKB21lc3NhZ2UiHgoMTGVhc2VSZW5ld2FsEg4KBnJ1bl9pZBgBIAEoCSLBAQoNU2VydmVyTWVzc2FnZRIzCgpyZWdpc3RlcmVkGAEgASgLMh0ub3BlbnNlZXIudjEuUmVnaXN0ZXJSZXNwb25zZUgAEiYKA2pvYhgCIAEoCzIXLm9wZW5zZWVyLnYxLk1vbml0b3JKb2JIABIlCgNhY2sYAyABKAsyFi5vcGVuc2Vlci52MS5SZXN1bHRBY2tIABIhCgRwaW5nGAQgASgLMhEub3BlbnNlZXIudjEuUGluZ0gAQgkKB21lc3NhZ2UiOQoPUmVnaXN0ZXJSZXF1ZXN0EhYKDndvcmtlcl92ZXJzaW9uGAEgASgJEg4KBnJlZ2lvbhgCIAEoCSJHChBSZWdpc3RlclJlc3BvbnNlEhEKCXdvcmtlcl9pZBgBIAEoCRIQCghhY2NlcHRlZBgCIAEoCBIOCgZyZWFzb24YAyABKAkiGwoKSm9iUmVxdWVzdBINCgVjb3VudBgBIAEoBSLIAQoKTW9uaXRvckpvYhIOCgZydW5faWQYASABKAkSEgoKbW9uaXRvcl9pZBgCIAEoCRILCgN1cmwYAyABKAkSEgoKdGltZW91dF9tcxgEIAEoBRIOCgZtZXRob2QYBSABKAkSNQoHaGVhZGVycxgGIAMoCzIkLm9wZW5zZWVyLnYxLk1vbml0b3JKb2IuSGVhZGVyc0VudHJ5Gi4KDEhlYWRlcnNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIi4KCVJlc3VsdEFjaxIOCgZydW5faWQYASABKAkSEQoJY29tbWl0dGVkGAIgASgIIhkKBFBpbmcSEQoJdGltZXN0YW1wGAEgASgDIhkKBFBvbmcSEQoJdGltZXN0YW1wGAEgASgDMlsKDVdvcmtlclNlcnZpY2USSgoMV29ya2VyU3RyZWFtEhoub3BlbnNlZXIudjEuV29ya2VyTWVzc2FnZRoaLm9wZW5zZWVyLnYxLlNlcnZlck1lc3NhZ2UoATABQjdaNWdpdGh1Yi5jb20vY3Jpc29nL29wZW5zZWVyL2dlbi9vcGVuc2Vlci92MTtvcGVuc2VlcnYxYgZwcm90bzM", [file_openseer_v1_monitors]);

/**
 * @generated from message openseer.v1.WorkerMessage
 */
export type WorkerMessage = Message<"openseer.v1.WorkerMessage"> & {
  /**
   * @generated from oneof openseer.v1.WorkerMessage.message
   */
  message: {
    /**
     * @generated from field: openseer.v1.RegisterRequest register = 1;
     */
    value: RegisterRequest;
    case: "register";
  } | {
    /**
     * Replaced CapacityUpdate with JobRequest
     *
     * @generated from field: openseer.v1.JobRequest job_request = 2;
     */
    value: JobRequest;
    case: "jobRequest";
  } | {
    /**
     * @generated from field: openseer.v1.MonitorResult result = 3;
     */
    value: MonitorResult;
    case: "result";
  } | {
    /**
     * @generated from field: openseer.v1.LeaseRenewal lease_renewal = 4;
     */
    value: LeaseRenewal;
    case: "leaseRenewal";
  } | {
    /**
     * @generated from field: openseer.v1.Pong pong = 5;
     */
    value: Pong;
    case: "pong";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message openseer.v1.WorkerMessage.
 * Use `create(WorkerMessageSchema)` to create a new message.
 */
export const WorkerMessageSchema: GenMessage<WorkerMessage> = /*@__PURE__*/
  messageDesc(file_openseer_v1_worker, 0);

/**
 * @generated from message openseer.v1.LeaseRenewal
 */
export type LeaseRenewal = Message<"openseer.v1.LeaseRenewal"> & {
  /**
   * @generated from field: string run_id = 1;
   */
  runId: string;
};

/**
 * Describes the message openseer.v1.LeaseRenewal.
 * Use `create(LeaseRenewalSchema)` to create a new message.
 */
export const LeaseRenewalSchema: GenMessage<LeaseRenewal> = /*@__PURE__*/
  messageDesc(file_openseer_v1_worker, 1);

/**
 * @generated from message openseer.v1.ServerMessage
 */
export type ServerMessage = Message<"openseer.v1.ServerMessage"> & {
  /**
   * @generated from oneof openseer.v1.ServerMessage.message
   */
  message: {
    /**
     * @generated from field: openseer.v1.RegisterResponse registered = 1;
     */
    value: RegisterResponse;
    case: "registered";
  } | {
    /**
     * @generated from field: openseer.v1.MonitorJob job = 2;
     */
    value: MonitorJob;
    case: "job";
  } | {
    /**
     * @generated from field: openseer.v1.ResultAck ack = 3;
     */
    value: ResultAck;
    case: "ack";
  } | {
    /**
     * @generated from field: openseer.v1.Ping ping = 4;
     */
    value: Ping;
    case: "ping";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message openseer.v1.ServerMessage.
 * Use `create(ServerMessageSchema)` to create a new message.
 */
export const ServerMessageSchema: GenMessage<ServerMessage> = /*@__PURE__*/
  messageDesc(file_openseer_v1_worker, 2);

/**
 * @generated from message openseer.v1.RegisterRequest
 */
export type RegisterRequest = Message<"openseer.v1.RegisterRequest"> & {
  /**
   * @generated from field: string worker_version = 1;
   */
  workerVersion: string;

  /**
   * @generated from field: string region = 2;
   */
  region: string;
};

/**
 * Describes the message openseer.v1.RegisterRequest.
 * Use `create(RegisterRequestSchema)` to create a new message.
 */
export const RegisterRequestSchema: GenMessage<RegisterRequest> = /*@__PURE__*/
  messageDesc(file_openseer_v1_worker, 3);

/**
 * @generated from message openseer.v1.RegisterResponse
 */
export type RegisterResponse = Message<"openseer.v1.RegisterResponse"> & {
  /**
   * @generated from field: string worker_id = 1;
   */
  workerId: string;

  /**
   * @generated from field: bool accepted = 2;
   */
  accepted: boolean;

  /**
   * @generated from field: string reason = 3;
   */
  reason: string;
};

/**
 * Describes the message openseer.v1.RegisterResponse.
 * Use `create(RegisterResponseSchema)` to create a new message.
 */
export const RegisterResponseSchema: GenMessage<RegisterResponse> = /*@__PURE__*/
  messageDesc(file_openseer_v1_worker, 4);

/**
 * @generated from message openseer.v1.JobRequest
 */
export type JobRequest = Message<"openseer.v1.JobRequest"> & {
  /**
   * Number of jobs the worker wants to receive
   *
   * @generated from field: int32 count = 1;
   */
  count: number;
};

/**
 * Describes the message openseer.v1.JobRequest.
 * Use `create(JobRequestSchema)` to create a new message.
 */
export const JobRequestSchema: GenMessage<JobRequest> = /*@__PURE__*/
  messageDesc(file_openseer_v1_worker, 5);

/**
 * @generated from message openseer.v1.MonitorJob
 */
export type MonitorJob = Message<"openseer.v1.MonitorJob"> & {
  /**
   * @generated from field: string run_id = 1;
   */
  runId: string;

  /**
   * @generated from field: string monitor_id = 2;
   */
  monitorId: string;

  /**
   * @generated from field: string url = 3;
   */
  url: string;

  /**
   * @generated from field: int32 timeout_ms = 4;
   */
  timeoutMs: number;

  /**
   * @generated from field: string method = 5;
   */
  method: string;

  /**
   * @generated from field: map<string, string> headers = 6;
   */
  headers: { [key: string]: string };
};

/**
 * Describes the message openseer.v1.MonitorJob.
 * Use `create(MonitorJobSchema)` to create a new message.
 */
export const MonitorJobSchema: GenMessage<MonitorJob> = /*@__PURE__*/
  messageDesc(file_openseer_v1_worker, 6);

/**
 * @generated from message openseer.v1.ResultAck
 */
export type ResultAck = Message<"openseer.v1.ResultAck"> & {
  /**
   * @generated from field: string run_id = 1;
   */
  runId: string;

  /**
   * @generated from field: bool committed = 2;
   */
  committed: boolean;
};

/**
 * Describes the message openseer.v1.ResultAck.
 * Use `create(ResultAckSchema)` to create a new message.
 */
export const ResultAckSchema: GenMessage<ResultAck> = /*@__PURE__*/
  messageDesc(file_openseer_v1_worker, 7);

/**
 * @generated from message openseer.v1.Ping
 */
export type Ping = Message<"openseer.v1.Ping"> & {
  /**
   * @generated from field: int64 timestamp = 1;
   */
  timestamp: bigint;
};

/**
 * Describes the message openseer.v1.Ping.
 * Use `create(PingSchema)` to create a new message.
 */
export const PingSchema: GenMessage<Ping> = /*@__PURE__*/
  messageDesc(file_openseer_v1_worker, 8);

/**
 * @generated from message openseer.v1.Pong
 */
export type Pong = Message<"openseer.v1.Pong"> & {
  /**
   * @generated from field: int64 timestamp = 1;
   */
  timestamp: bigint;
};

/**
 * Describes the message openseer.v1.Pong.
 * Use `create(PongSchema)` to create a new message.
 */
export const PongSchema: GenMessage<Pong> = /*@__PURE__*/
  messageDesc(file_openseer_v1_worker, 9);

/**
 * @generated from service openseer.v1.WorkerService
 */
export const WorkerService: GenService<{
  /**
   * @generated from rpc openseer.v1.WorkerService.WorkerStream
   */
  workerStream: {
    methodKind: "bidi_streaming";
    input: typeof WorkerMessageSchema;
    output: typeof ServerMessageSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_openseer_v1_worker, 0);

