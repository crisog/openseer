// @generated by protoc-gen-es v2.8.0 with parameter "target=ts"
// @generated from file openseer/v1/dashboard.proto (package openseer.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file openseer/v1/dashboard.proto.
 */
export const file_openseer_v1_dashboard: GenFile = /*@__PURE__*/
  fileDesc("ChtvcGVuc2Vlci92MS9kYXNoYm9hcmQucHJvdG8SC29wZW5zZWVyLnYxIh0KG0dldERhc2hib2FyZE92ZXJ2aWV3UmVxdWVzdCJQChxHZXREYXNoYm9hcmRPdmVydmlld1Jlc3BvbnNlEjAKCG92ZXJ2aWV3GAEgASgLMh4ub3BlbnNlZXIudjEuRGFzaGJvYXJkT3ZlcnZpZXci1QIKEURhc2hib2FyZE92ZXJ2aWV3EhYKDnRvdGFsX21vbml0b3JzGAEgASgDEhgKEGVuYWJsZWRfbW9uaXRvcnMYAiABKAMSGQoRZGlzYWJsZWRfbW9uaXRvcnMYAyABKAMSGAoQaGVhbHRoeV9tb25pdG9ycxgEIAEoAxIaChJ1bmhlYWx0aHlfbW9uaXRvcnMYBSABKAMSFgoOdG90YWxfcnVuc18yNGgYBiABKAMSFwoPZmFpbGVkX3J1bnNfMjRoGAcgASgDEhwKFG92ZXJhbGxfc3VjY2Vzc19yYXRlGAggASgBEjMKD3JlY2VudF9mYWlsdXJlcxgJIAMoCzIaLm9wZW5zZWVyLnYxLk1vbml0b3JTdGF0dXMSOQoQc2xvd2VzdF9tb25pdG9ycxgKIAMoCzIfLm9wZW5zZWVyLnYxLk1vbml0b3JQZXJmb3JtYW5jZSKJAQoNTW9uaXRvclN0YXR1cxISCgptb25pdG9yX2lkGAEgASgJEgsKA3VybBgCIAEoCRIOCgZzdGF0dXMYAyABKAkSMAoMbGFzdF9mYWlsdXJlGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIVCg1lcnJvcl9tZXNzYWdlGAUgASgJIo8BChJNb25pdG9yUGVyZm9ybWFuY2USEgoKbW9uaXRvcl9pZBgBIAEoCRILCgN1cmwYAiABKAkSHAoUYXZnX3Jlc3BvbnNlX3RpbWVfbXMYAyABKAESHAoUcDk1X3Jlc3BvbnNlX3RpbWVfbXMYBCABKAESHAoUcDk5X3Jlc3BvbnNlX3RpbWVfbXMYBSABKAEygQEKEERhc2hib2FyZFNlcnZpY2USbQoUR2V0RGFzaGJvYXJkT3ZlcnZpZXcSKC5vcGVuc2Vlci52MS5HZXREYXNoYm9hcmRPdmVydmlld1JlcXVlc3QaKS5vcGVuc2Vlci52MS5HZXREYXNoYm9hcmRPdmVydmlld1Jlc3BvbnNlIgBCN1o1Z2l0aHViLmNvbS9jcmlzb2cvb3BlbnNlZXIvZ2VuL29wZW5zZWVyL3YxO29wZW5zZWVydjFiBnByb3RvMw", [file_google_protobuf_timestamp]);

/**
 * Empty for now
 *
 * @generated from message openseer.v1.GetDashboardOverviewRequest
 */
export type GetDashboardOverviewRequest = Message<"openseer.v1.GetDashboardOverviewRequest"> & {
};

/**
 * Describes the message openseer.v1.GetDashboardOverviewRequest.
 * Use `create(GetDashboardOverviewRequestSchema)` to create a new message.
 */
export const GetDashboardOverviewRequestSchema: GenMessage<GetDashboardOverviewRequest> = /*@__PURE__*/
  messageDesc(file_openseer_v1_dashboard, 0);

/**
 * @generated from message openseer.v1.GetDashboardOverviewResponse
 */
export type GetDashboardOverviewResponse = Message<"openseer.v1.GetDashboardOverviewResponse"> & {
  /**
   * @generated from field: openseer.v1.DashboardOverview overview = 1;
   */
  overview?: DashboardOverview;
};

/**
 * Describes the message openseer.v1.GetDashboardOverviewResponse.
 * Use `create(GetDashboardOverviewResponseSchema)` to create a new message.
 */
export const GetDashboardOverviewResponseSchema: GenMessage<GetDashboardOverviewResponse> = /*@__PURE__*/
  messageDesc(file_openseer_v1_dashboard, 1);

/**
 * @generated from message openseer.v1.DashboardOverview
 */
export type DashboardOverview = Message<"openseer.v1.DashboardOverview"> & {
  /**
   * @generated from field: int64 total_monitors = 1;
   */
  totalMonitors: bigint;

  /**
   * @generated from field: int64 enabled_monitors = 2;
   */
  enabledMonitors: bigint;

  /**
   * @generated from field: int64 disabled_monitors = 3;
   */
  disabledMonitors: bigint;

  /**
   * @generated from field: int64 healthy_monitors = 4;
   */
  healthyMonitors: bigint;

  /**
   * @generated from field: int64 unhealthy_monitors = 5;
   */
  unhealthyMonitors: bigint;

  /**
   * @generated from field: int64 total_runs_24h = 6;
   */
  totalRuns24h: bigint;

  /**
   * @generated from field: int64 failed_runs_24h = 7;
   */
  failedRuns24h: bigint;

  /**
   * @generated from field: double overall_success_rate = 8;
   */
  overallSuccessRate: number;

  /**
   * @generated from field: repeated openseer.v1.MonitorStatus recent_failures = 9;
   */
  recentFailures: MonitorStatus[];

  /**
   * @generated from field: repeated openseer.v1.MonitorPerformance slowest_monitors = 10;
   */
  slowestMonitors: MonitorPerformance[];
};

/**
 * Describes the message openseer.v1.DashboardOverview.
 * Use `create(DashboardOverviewSchema)` to create a new message.
 */
export const DashboardOverviewSchema: GenMessage<DashboardOverview> = /*@__PURE__*/
  messageDesc(file_openseer_v1_dashboard, 2);

/**
 * @generated from message openseer.v1.MonitorStatus
 */
export type MonitorStatus = Message<"openseer.v1.MonitorStatus"> & {
  /**
   * @generated from field: string monitor_id = 1;
   */
  monitorId: string;

  /**
   * @generated from field: string url = 2;
   */
  url: string;

  /**
   * @generated from field: string status = 3;
   */
  status: string;

  /**
   * @generated from field: google.protobuf.Timestamp last_failure = 4;
   */
  lastFailure?: Timestamp;

  /**
   * @generated from field: string error_message = 5;
   */
  errorMessage: string;
};

/**
 * Describes the message openseer.v1.MonitorStatus.
 * Use `create(MonitorStatusSchema)` to create a new message.
 */
export const MonitorStatusSchema: GenMessage<MonitorStatus> = /*@__PURE__*/
  messageDesc(file_openseer_v1_dashboard, 3);

/**
 * @generated from message openseer.v1.MonitorPerformance
 */
export type MonitorPerformance = Message<"openseer.v1.MonitorPerformance"> & {
  /**
   * @generated from field: string monitor_id = 1;
   */
  monitorId: string;

  /**
   * @generated from field: string url = 2;
   */
  url: string;

  /**
   * @generated from field: double avg_response_time_ms = 3;
   */
  avgResponseTimeMs: number;

  /**
   * @generated from field: double p95_response_time_ms = 4;
   */
  p95ResponseTimeMs: number;

  /**
   * @generated from field: double p99_response_time_ms = 5;
   */
  p99ResponseTimeMs: number;
};

/**
 * Describes the message openseer.v1.MonitorPerformance.
 * Use `create(MonitorPerformanceSchema)` to create a new message.
 */
export const MonitorPerformanceSchema: GenMessage<MonitorPerformance> = /*@__PURE__*/
  messageDesc(file_openseer_v1_dashboard, 4);

/**
 * @generated from service openseer.v1.DashboardService
 */
export const DashboardService: GenService<{
  /**
   * @generated from rpc openseer.v1.DashboardService.GetDashboardOverview
   */
  getDashboardOverview: {
    methodKind: "unary";
    input: typeof GetDashboardOverviewRequestSchema;
    output: typeof GetDashboardOverviewResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_openseer_v1_dashboard, 0);

