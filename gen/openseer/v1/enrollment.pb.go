// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: openseer/v1/enrollment.proto

package openseerv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EnrollWorkerRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	WorkerVersion   string                 `protobuf:"bytes,1,opt,name=worker_version,json=workerVersion,proto3" json:"worker_version,omitempty"`
	Region          string                 `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	Hostname        string                 `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Capabilities    map[string]string      `protobuf:"bytes,4,rep,name=capabilities,proto3" json:"capabilities,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	EnrollmentToken string                 `protobuf:"bytes,5,opt,name=enrollment_token,json=enrollmentToken,proto3" json:"enrollment_token,omitempty"`
	CsrPem          string                 `protobuf:"bytes,6,opt,name=csr_pem,json=csrPem,proto3" json:"csr_pem,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *EnrollWorkerRequest) Reset() {
	*x = EnrollWorkerRequest{}
	mi := &file_openseer_v1_enrollment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnrollWorkerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrollWorkerRequest) ProtoMessage() {}

func (x *EnrollWorkerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_openseer_v1_enrollment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrollWorkerRequest.ProtoReflect.Descriptor instead.
func (*EnrollWorkerRequest) Descriptor() ([]byte, []int) {
	return file_openseer_v1_enrollment_proto_rawDescGZIP(), []int{0}
}

func (x *EnrollWorkerRequest) GetWorkerVersion() string {
	if x != nil {
		return x.WorkerVersion
	}
	return ""
}

func (x *EnrollWorkerRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *EnrollWorkerRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *EnrollWorkerRequest) GetCapabilities() map[string]string {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *EnrollWorkerRequest) GetEnrollmentToken() string {
	if x != nil {
		return x.EnrollmentToken
	}
	return ""
}

func (x *EnrollWorkerRequest) GetCsrPem() string {
	if x != nil {
		return x.CsrPem
	}
	return ""
}

type EnrollWorkerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      string                 `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	Accepted      bool                   `protobuf:"varint,2,opt,name=accepted,proto3" json:"accepted,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	Certificate   string                 `protobuf:"bytes,4,opt,name=certificate,proto3" json:"certificate,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,6,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	ApiEndpoint   string                 `protobuf:"bytes,7,opt,name=api_endpoint,json=apiEndpoint,proto3" json:"api_endpoint,omitempty"`
	CaCertificate string                 `protobuf:"bytes,8,opt,name=ca_certificate,json=caCertificate,proto3" json:"ca_certificate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnrollWorkerResponse) Reset() {
	*x = EnrollWorkerResponse{}
	mi := &file_openseer_v1_enrollment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnrollWorkerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrollWorkerResponse) ProtoMessage() {}

func (x *EnrollWorkerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_openseer_v1_enrollment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrollWorkerResponse.ProtoReflect.Descriptor instead.
func (*EnrollWorkerResponse) Descriptor() ([]byte, []int) {
	return file_openseer_v1_enrollment_proto_rawDescGZIP(), []int{1}
}

func (x *EnrollWorkerResponse) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *EnrollWorkerResponse) GetAccepted() bool {
	if x != nil {
		return x.Accepted
	}
	return false
}

func (x *EnrollWorkerResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *EnrollWorkerResponse) GetCertificate() string {
	if x != nil {
		return x.Certificate
	}
	return ""
}

func (x *EnrollWorkerResponse) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *EnrollWorkerResponse) GetApiEndpoint() string {
	if x != nil {
		return x.ApiEndpoint
	}
	return ""
}

func (x *EnrollWorkerResponse) GetCaCertificate() string {
	if x != nil {
		return x.CaCertificate
	}
	return ""
}

type RenewEnrollmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      string                 `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	CsrPem        string                 `protobuf:"bytes,2,opt,name=csr_pem,json=csrPem,proto3" json:"csr_pem,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RenewEnrollmentRequest) Reset() {
	*x = RenewEnrollmentRequest{}
	mi := &file_openseer_v1_enrollment_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenewEnrollmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenewEnrollmentRequest) ProtoMessage() {}

func (x *RenewEnrollmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_openseer_v1_enrollment_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenewEnrollmentRequest.ProtoReflect.Descriptor instead.
func (*RenewEnrollmentRequest) Descriptor() ([]byte, []int) {
	return file_openseer_v1_enrollment_proto_rawDescGZIP(), []int{2}
}

func (x *RenewEnrollmentRequest) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *RenewEnrollmentRequest) GetCsrPem() string {
	if x != nil {
		return x.CsrPem
	}
	return ""
}

type RenewEnrollmentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Renewed       bool                   `protobuf:"varint,1,opt,name=renewed,proto3" json:"renewed,omitempty"`
	Certificate   string                 `protobuf:"bytes,2,opt,name=certificate,proto3" json:"certificate,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	Reason        string                 `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RenewEnrollmentResponse) Reset() {
	*x = RenewEnrollmentResponse{}
	mi := &file_openseer_v1_enrollment_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenewEnrollmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenewEnrollmentResponse) ProtoMessage() {}

func (x *RenewEnrollmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_openseer_v1_enrollment_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenewEnrollmentResponse.ProtoReflect.Descriptor instead.
func (*RenewEnrollmentResponse) Descriptor() ([]byte, []int) {
	return file_openseer_v1_enrollment_proto_rawDescGZIP(), []int{3}
}

func (x *RenewEnrollmentResponse) GetRenewed() bool {
	if x != nil {
		return x.Renewed
	}
	return false
}

func (x *RenewEnrollmentResponse) GetCertificate() string {
	if x != nil {
		return x.Certificate
	}
	return ""
}

func (x *RenewEnrollmentResponse) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *RenewEnrollmentResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type RevokeEnrollmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      string                 `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokeEnrollmentRequest) Reset() {
	*x = RevokeEnrollmentRequest{}
	mi := &file_openseer_v1_enrollment_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeEnrollmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeEnrollmentRequest) ProtoMessage() {}

func (x *RevokeEnrollmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_openseer_v1_enrollment_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeEnrollmentRequest.ProtoReflect.Descriptor instead.
func (*RevokeEnrollmentRequest) Descriptor() ([]byte, []int) {
	return file_openseer_v1_enrollment_proto_rawDescGZIP(), []int{4}
}

func (x *RevokeEnrollmentRequest) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *RevokeEnrollmentRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type RevokeEnrollmentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Revoked       bool                   `protobuf:"varint,1,opt,name=revoked,proto3" json:"revoked,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokeEnrollmentResponse) Reset() {
	*x = RevokeEnrollmentResponse{}
	mi := &file_openseer_v1_enrollment_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeEnrollmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeEnrollmentResponse) ProtoMessage() {}

func (x *RevokeEnrollmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_openseer_v1_enrollment_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeEnrollmentResponse.ProtoReflect.Descriptor instead.
func (*RevokeEnrollmentResponse) Descriptor() ([]byte, []int) {
	return file_openseer_v1_enrollment_proto_rawDescGZIP(), []int{5}
}

func (x *RevokeEnrollmentResponse) GetRevoked() bool {
	if x != nil {
		return x.Revoked
	}
	return false
}

func (x *RevokeEnrollmentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetWorkerStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      string                 `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkerStatusRequest) Reset() {
	*x = GetWorkerStatusRequest{}
	mi := &file_openseer_v1_enrollment_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkerStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkerStatusRequest) ProtoMessage() {}

func (x *GetWorkerStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_openseer_v1_enrollment_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkerStatusRequest.ProtoReflect.Descriptor instead.
func (*GetWorkerStatusRequest) Descriptor() ([]byte, []int) {
	return file_openseer_v1_enrollment_proto_rawDescGZIP(), []int{6}
}

func (x *GetWorkerStatusRequest) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

type GetWorkerStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      string                 `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	EnrolledAt    int64                  `protobuf:"varint,3,opt,name=enrolled_at,json=enrolledAt,proto3" json:"enrolled_at,omitempty"`
	LastSeenAt    int64                  `protobuf:"varint,4,opt,name=last_seen_at,json=lastSeenAt,proto3" json:"last_seen_at,omitempty"`
	Region        string                 `protobuf:"bytes,5,opt,name=region,proto3" json:"region,omitempty"`
	Hostname      string                 `protobuf:"bytes,6,opt,name=hostname,proto3" json:"hostname,omitempty"`
	WorkerVersion string                 `protobuf:"bytes,7,opt,name=worker_version,json=workerVersion,proto3" json:"worker_version,omitempty"`
	Capabilities  map[string]string      `protobuf:"bytes,8,rep,name=capabilities,proto3" json:"capabilities,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkerStatusResponse) Reset() {
	*x = GetWorkerStatusResponse{}
	mi := &file_openseer_v1_enrollment_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkerStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkerStatusResponse) ProtoMessage() {}

func (x *GetWorkerStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_openseer_v1_enrollment_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkerStatusResponse.ProtoReflect.Descriptor instead.
func (*GetWorkerStatusResponse) Descriptor() ([]byte, []int) {
	return file_openseer_v1_enrollment_proto_rawDescGZIP(), []int{7}
}

func (x *GetWorkerStatusResponse) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *GetWorkerStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetWorkerStatusResponse) GetEnrolledAt() int64 {
	if x != nil {
		return x.EnrolledAt
	}
	return 0
}

func (x *GetWorkerStatusResponse) GetLastSeenAt() int64 {
	if x != nil {
		return x.LastSeenAt
	}
	return 0
}

func (x *GetWorkerStatusResponse) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *GetWorkerStatusResponse) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *GetWorkerStatusResponse) GetWorkerVersion() string {
	if x != nil {
		return x.WorkerVersion
	}
	return ""
}

func (x *GetWorkerStatusResponse) GetCapabilities() map[string]string {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

type ListWorkersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Region        string                 `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWorkersRequest) Reset() {
	*x = ListWorkersRequest{}
	mi := &file_openseer_v1_enrollment_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWorkersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkersRequest) ProtoMessage() {}

func (x *ListWorkersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_openseer_v1_enrollment_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkersRequest.ProtoReflect.Descriptor instead.
func (*ListWorkersRequest) Descriptor() ([]byte, []int) {
	return file_openseer_v1_enrollment_proto_rawDescGZIP(), []int{8}
}

func (x *ListWorkersRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ListWorkersRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListWorkersRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListWorkersRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListWorkersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Workers       []*WorkerInfo          `protobuf:"bytes,1,rep,name=workers,proto3" json:"workers,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWorkersResponse) Reset() {
	*x = ListWorkersResponse{}
	mi := &file_openseer_v1_enrollment_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWorkersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkersResponse) ProtoMessage() {}

func (x *ListWorkersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_openseer_v1_enrollment_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkersResponse.ProtoReflect.Descriptor instead.
func (*ListWorkersResponse) Descriptor() ([]byte, []int) {
	return file_openseer_v1_enrollment_proto_rawDescGZIP(), []int{9}
}

func (x *ListWorkersResponse) GetWorkers() []*WorkerInfo {
	if x != nil {
		return x.Workers
	}
	return nil
}

func (x *ListWorkersResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListWorkersResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type WorkerInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      string                 `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	EnrolledAt    int64                  `protobuf:"varint,3,opt,name=enrolled_at,json=enrolledAt,proto3" json:"enrolled_at,omitempty"`
	LastSeenAt    int64                  `protobuf:"varint,4,opt,name=last_seen_at,json=lastSeenAt,proto3" json:"last_seen_at,omitempty"`
	Region        string                 `protobuf:"bytes,5,opt,name=region,proto3" json:"region,omitempty"`
	Hostname      string                 `protobuf:"bytes,6,opt,name=hostname,proto3" json:"hostname,omitempty"`
	WorkerVersion string                 `protobuf:"bytes,7,opt,name=worker_version,json=workerVersion,proto3" json:"worker_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerInfo) Reset() {
	*x = WorkerInfo{}
	mi := &file_openseer_v1_enrollment_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerInfo) ProtoMessage() {}

func (x *WorkerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_openseer_v1_enrollment_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerInfo.ProtoReflect.Descriptor instead.
func (*WorkerInfo) Descriptor() ([]byte, []int) {
	return file_openseer_v1_enrollment_proto_rawDescGZIP(), []int{10}
}

func (x *WorkerInfo) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *WorkerInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *WorkerInfo) GetEnrolledAt() int64 {
	if x != nil {
		return x.EnrolledAt
	}
	return 0
}

func (x *WorkerInfo) GetLastSeenAt() int64 {
	if x != nil {
		return x.LastSeenAt
	}
	return 0
}

func (x *WorkerInfo) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *WorkerInfo) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *WorkerInfo) GetWorkerVersion() string {
	if x != nil {
		return x.WorkerVersion
	}
	return ""
}

var File_openseer_v1_enrollment_proto protoreflect.FileDescriptor

const file_openseer_v1_enrollment_proto_rawDesc = "" +
	"\n" +
	"\x1copenseer/v1/enrollment.proto\x12\vopenseer.v1\"\xcd\x02\n" +
	"\x13EnrollWorkerRequest\x12%\n" +
	"\x0eworker_version\x18\x01 \x01(\tR\rworkerVersion\x12\x16\n" +
	"\x06region\x18\x02 \x01(\tR\x06region\x12\x1a\n" +
	"\bhostname\x18\x03 \x01(\tR\bhostname\x12V\n" +
	"\fcapabilities\x18\x04 \x03(\v22.openseer.v1.EnrollWorkerRequest.CapabilitiesEntryR\fcapabilities\x12)\n" +
	"\x10enrollment_token\x18\x05 \x01(\tR\x0fenrollmentToken\x12\x17\n" +
	"\acsr_pem\x18\x06 \x01(\tR\x06csrPem\x1a?\n" +
	"\x11CapabilitiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf2\x01\n" +
	"\x14EnrollWorkerResponse\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\x12\x1a\n" +
	"\baccepted\x18\x02 \x01(\bR\baccepted\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\x12 \n" +
	"\vcertificate\x18\x04 \x01(\tR\vcertificate\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x06 \x01(\x03R\texpiresAt\x12!\n" +
	"\fapi_endpoint\x18\a \x01(\tR\vapiEndpoint\x12%\n" +
	"\x0eca_certificate\x18\b \x01(\tR\rcaCertificate\"N\n" +
	"\x16RenewEnrollmentRequest\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\x12\x17\n" +
	"\acsr_pem\x18\x02 \x01(\tR\x06csrPem\"\x8c\x01\n" +
	"\x17RenewEnrollmentResponse\x12\x18\n" +
	"\arenewed\x18\x01 \x01(\bR\arenewed\x12 \n" +
	"\vcertificate\x18\x02 \x01(\tR\vcertificate\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x04 \x01(\x03R\texpiresAt\x12\x16\n" +
	"\x06reason\x18\x05 \x01(\tR\x06reason\"N\n" +
	"\x17RevokeEnrollmentRequest\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"N\n" +
	"\x18RevokeEnrollmentResponse\x12\x18\n" +
	"\arevoked\x18\x01 \x01(\bR\arevoked\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"5\n" +
	"\x16GetWorkerStatusRequest\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\"\x89\x03\n" +
	"\x17GetWorkerStatusResponse\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x1f\n" +
	"\venrolled_at\x18\x03 \x01(\x03R\n" +
	"enrolledAt\x12 \n" +
	"\flast_seen_at\x18\x04 \x01(\x03R\n" +
	"lastSeenAt\x12\x16\n" +
	"\x06region\x18\x05 \x01(\tR\x06region\x12\x1a\n" +
	"\bhostname\x18\x06 \x01(\tR\bhostname\x12%\n" +
	"\x0eworker_version\x18\a \x01(\tR\rworkerVersion\x12Z\n" +
	"\fcapabilities\x18\b \x03(\v26.openseer.v1.GetWorkerStatusResponse.CapabilitiesEntryR\fcapabilities\x1a?\n" +
	"\x11CapabilitiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x80\x01\n" +
	"\x12ListWorkersRequest\x12\x16\n" +
	"\x06region\x18\x01 \x01(\tR\x06region\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x04 \x01(\tR\tpageToken\"\x91\x01\n" +
	"\x13ListWorkersResponse\x121\n" +
	"\aworkers\x18\x01 \x03(\v2\x17.openseer.v1.WorkerInfoR\aworkers\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\"\xdf\x01\n" +
	"\n" +
	"WorkerInfo\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x1f\n" +
	"\venrolled_at\x18\x03 \x01(\x03R\n" +
	"enrolledAt\x12 \n" +
	"\flast_seen_at\x18\x04 \x01(\x03R\n" +
	"lastSeenAt\x12\x16\n" +
	"\x06region\x18\x05 \x01(\tR\x06region\x12\x1a\n" +
	"\bhostname\x18\x06 \x01(\tR\bhostname\x12%\n" +
	"\x0eworker_version\x18\a \x01(\tR\rworkerVersion2\xd7\x03\n" +
	"\x11EnrollmentService\x12S\n" +
	"\fEnrollWorker\x12 .openseer.v1.EnrollWorkerRequest\x1a!.openseer.v1.EnrollWorkerResponse\x12\\\n" +
	"\x0fRenewEnrollment\x12#.openseer.v1.RenewEnrollmentRequest\x1a$.openseer.v1.RenewEnrollmentResponse\x12_\n" +
	"\x10RevokeEnrollment\x12$.openseer.v1.RevokeEnrollmentRequest\x1a%.openseer.v1.RevokeEnrollmentResponse\x12\\\n" +
	"\x0fGetWorkerStatus\x12#.openseer.v1.GetWorkerStatusRequest\x1a$.openseer.v1.GetWorkerStatusResponse\x12P\n" +
	"\vListWorkers\x12\x1f.openseer.v1.ListWorkersRequest\x1a .openseer.v1.ListWorkersResponseB7Z5github.com/crisog/openseer/gen/openseer/v1;openseerv1b\x06proto3"

var (
	file_openseer_v1_enrollment_proto_rawDescOnce sync.Once
	file_openseer_v1_enrollment_proto_rawDescData []byte
)

func file_openseer_v1_enrollment_proto_rawDescGZIP() []byte {
	file_openseer_v1_enrollment_proto_rawDescOnce.Do(func() {
		file_openseer_v1_enrollment_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_openseer_v1_enrollment_proto_rawDesc), len(file_openseer_v1_enrollment_proto_rawDesc)))
	})
	return file_openseer_v1_enrollment_proto_rawDescData
}

var file_openseer_v1_enrollment_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_openseer_v1_enrollment_proto_goTypes = []any{
	(*EnrollWorkerRequest)(nil),      // 0: openseer.v1.EnrollWorkerRequest
	(*EnrollWorkerResponse)(nil),     // 1: openseer.v1.EnrollWorkerResponse
	(*RenewEnrollmentRequest)(nil),   // 2: openseer.v1.RenewEnrollmentRequest
	(*RenewEnrollmentResponse)(nil),  // 3: openseer.v1.RenewEnrollmentResponse
	(*RevokeEnrollmentRequest)(nil),  // 4: openseer.v1.RevokeEnrollmentRequest
	(*RevokeEnrollmentResponse)(nil), // 5: openseer.v1.RevokeEnrollmentResponse
	(*GetWorkerStatusRequest)(nil),   // 6: openseer.v1.GetWorkerStatusRequest
	(*GetWorkerStatusResponse)(nil),  // 7: openseer.v1.GetWorkerStatusResponse
	(*ListWorkersRequest)(nil),       // 8: openseer.v1.ListWorkersRequest
	(*ListWorkersResponse)(nil),      // 9: openseer.v1.ListWorkersResponse
	(*WorkerInfo)(nil),               // 10: openseer.v1.WorkerInfo
	nil,                              // 11: openseer.v1.EnrollWorkerRequest.CapabilitiesEntry
	nil,                              // 12: openseer.v1.GetWorkerStatusResponse.CapabilitiesEntry
}
var file_openseer_v1_enrollment_proto_depIdxs = []int32{
	11, // 0: openseer.v1.EnrollWorkerRequest.capabilities:type_name -> openseer.v1.EnrollWorkerRequest.CapabilitiesEntry
	12, // 1: openseer.v1.GetWorkerStatusResponse.capabilities:type_name -> openseer.v1.GetWorkerStatusResponse.CapabilitiesEntry
	10, // 2: openseer.v1.ListWorkersResponse.workers:type_name -> openseer.v1.WorkerInfo
	0,  // 3: openseer.v1.EnrollmentService.EnrollWorker:input_type -> openseer.v1.EnrollWorkerRequest
	2,  // 4: openseer.v1.EnrollmentService.RenewEnrollment:input_type -> openseer.v1.RenewEnrollmentRequest
	4,  // 5: openseer.v1.EnrollmentService.RevokeEnrollment:input_type -> openseer.v1.RevokeEnrollmentRequest
	6,  // 6: openseer.v1.EnrollmentService.GetWorkerStatus:input_type -> openseer.v1.GetWorkerStatusRequest
	8,  // 7: openseer.v1.EnrollmentService.ListWorkers:input_type -> openseer.v1.ListWorkersRequest
	1,  // 8: openseer.v1.EnrollmentService.EnrollWorker:output_type -> openseer.v1.EnrollWorkerResponse
	3,  // 9: openseer.v1.EnrollmentService.RenewEnrollment:output_type -> openseer.v1.RenewEnrollmentResponse
	5,  // 10: openseer.v1.EnrollmentService.RevokeEnrollment:output_type -> openseer.v1.RevokeEnrollmentResponse
	7,  // 11: openseer.v1.EnrollmentService.GetWorkerStatus:output_type -> openseer.v1.GetWorkerStatusResponse
	9,  // 12: openseer.v1.EnrollmentService.ListWorkers:output_type -> openseer.v1.ListWorkersResponse
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_openseer_v1_enrollment_proto_init() }
func file_openseer_v1_enrollment_proto_init() {
	if File_openseer_v1_enrollment_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_openseer_v1_enrollment_proto_rawDesc), len(file_openseer_v1_enrollment_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_openseer_v1_enrollment_proto_goTypes,
		DependencyIndexes: file_openseer_v1_enrollment_proto_depIdxs,
		MessageInfos:      file_openseer_v1_enrollment_proto_msgTypes,
	}.Build()
	File_openseer_v1_enrollment_proto = out.File
	file_openseer_v1_enrollment_proto_goTypes = nil
	file_openseer_v1_enrollment_proto_depIdxs = nil
}
