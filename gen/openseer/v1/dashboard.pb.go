// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: openseer/v1/dashboard.proto

package openseerv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetDashboardOverviewRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDashboardOverviewRequest) Reset() {
	*x = GetDashboardOverviewRequest{}
	mi := &file_openseer_v1_dashboard_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDashboardOverviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDashboardOverviewRequest) ProtoMessage() {}

func (x *GetDashboardOverviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_openseer_v1_dashboard_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDashboardOverviewRequest.ProtoReflect.Descriptor instead.
func (*GetDashboardOverviewRequest) Descriptor() ([]byte, []int) {
	return file_openseer_v1_dashboard_proto_rawDescGZIP(), []int{0}
}

type GetDashboardOverviewResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Overview      *DashboardOverview     `protobuf:"bytes,1,opt,name=overview,proto3" json:"overview,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDashboardOverviewResponse) Reset() {
	*x = GetDashboardOverviewResponse{}
	mi := &file_openseer_v1_dashboard_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDashboardOverviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDashboardOverviewResponse) ProtoMessage() {}

func (x *GetDashboardOverviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_openseer_v1_dashboard_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDashboardOverviewResponse.ProtoReflect.Descriptor instead.
func (*GetDashboardOverviewResponse) Descriptor() ([]byte, []int) {
	return file_openseer_v1_dashboard_proto_rawDescGZIP(), []int{1}
}

func (x *GetDashboardOverviewResponse) GetOverview() *DashboardOverview {
	if x != nil {
		return x.Overview
	}
	return nil
}

type DashboardOverview struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	TotalMonitors      int64                  `protobuf:"varint,1,opt,name=total_monitors,json=totalMonitors,proto3" json:"total_monitors,omitempty"`
	EnabledMonitors    int64                  `protobuf:"varint,2,opt,name=enabled_monitors,json=enabledMonitors,proto3" json:"enabled_monitors,omitempty"`
	DisabledMonitors   int64                  `protobuf:"varint,3,opt,name=disabled_monitors,json=disabledMonitors,proto3" json:"disabled_monitors,omitempty"`
	HealthyMonitors    int64                  `protobuf:"varint,4,opt,name=healthy_monitors,json=healthyMonitors,proto3" json:"healthy_monitors,omitempty"`
	UnhealthyMonitors  int64                  `protobuf:"varint,5,opt,name=unhealthy_monitors,json=unhealthyMonitors,proto3" json:"unhealthy_monitors,omitempty"`
	TotalRuns_24H      int64                  `protobuf:"varint,6,opt,name=total_runs_24h,json=totalRuns24h,proto3" json:"total_runs_24h,omitempty"`
	FailedRuns_24H     int64                  `protobuf:"varint,7,opt,name=failed_runs_24h,json=failedRuns24h,proto3" json:"failed_runs_24h,omitempty"`
	OverallSuccessRate float64                `protobuf:"fixed64,8,opt,name=overall_success_rate,json=overallSuccessRate,proto3" json:"overall_success_rate,omitempty"`
	RecentFailures     []*MonitorStatus       `protobuf:"bytes,9,rep,name=recent_failures,json=recentFailures,proto3" json:"recent_failures,omitempty"`
	SlowestMonitors    []*MonitorPerformance  `protobuf:"bytes,10,rep,name=slowest_monitors,json=slowestMonitors,proto3" json:"slowest_monitors,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *DashboardOverview) Reset() {
	*x = DashboardOverview{}
	mi := &file_openseer_v1_dashboard_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DashboardOverview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardOverview) ProtoMessage() {}

func (x *DashboardOverview) ProtoReflect() protoreflect.Message {
	mi := &file_openseer_v1_dashboard_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardOverview.ProtoReflect.Descriptor instead.
func (*DashboardOverview) Descriptor() ([]byte, []int) {
	return file_openseer_v1_dashboard_proto_rawDescGZIP(), []int{2}
}

func (x *DashboardOverview) GetTotalMonitors() int64 {
	if x != nil {
		return x.TotalMonitors
	}
	return 0
}

func (x *DashboardOverview) GetEnabledMonitors() int64 {
	if x != nil {
		return x.EnabledMonitors
	}
	return 0
}

func (x *DashboardOverview) GetDisabledMonitors() int64 {
	if x != nil {
		return x.DisabledMonitors
	}
	return 0
}

func (x *DashboardOverview) GetHealthyMonitors() int64 {
	if x != nil {
		return x.HealthyMonitors
	}
	return 0
}

func (x *DashboardOverview) GetUnhealthyMonitors() int64 {
	if x != nil {
		return x.UnhealthyMonitors
	}
	return 0
}

func (x *DashboardOverview) GetTotalRuns_24H() int64 {
	if x != nil {
		return x.TotalRuns_24H
	}
	return 0
}

func (x *DashboardOverview) GetFailedRuns_24H() int64 {
	if x != nil {
		return x.FailedRuns_24H
	}
	return 0
}

func (x *DashboardOverview) GetOverallSuccessRate() float64 {
	if x != nil {
		return x.OverallSuccessRate
	}
	return 0
}

func (x *DashboardOverview) GetRecentFailures() []*MonitorStatus {
	if x != nil {
		return x.RecentFailures
	}
	return nil
}

func (x *DashboardOverview) GetSlowestMonitors() []*MonitorPerformance {
	if x != nil {
		return x.SlowestMonitors
	}
	return nil
}

type MonitorStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MonitorId     string                 `protobuf:"bytes,1,opt,name=monitor_id,json=monitorId,proto3" json:"monitor_id,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	LastFailure   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_failure,json=lastFailure,proto3" json:"last_failure,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,5,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MonitorStatus) Reset() {
	*x = MonitorStatus{}
	mi := &file_openseer_v1_dashboard_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonitorStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorStatus) ProtoMessage() {}

func (x *MonitorStatus) ProtoReflect() protoreflect.Message {
	mi := &file_openseer_v1_dashboard_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorStatus.ProtoReflect.Descriptor instead.
func (*MonitorStatus) Descriptor() ([]byte, []int) {
	return file_openseer_v1_dashboard_proto_rawDescGZIP(), []int{3}
}

func (x *MonitorStatus) GetMonitorId() string {
	if x != nil {
		return x.MonitorId
	}
	return ""
}

func (x *MonitorStatus) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MonitorStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *MonitorStatus) GetLastFailure() *timestamppb.Timestamp {
	if x != nil {
		return x.LastFailure
	}
	return nil
}

func (x *MonitorStatus) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type MonitorPerformance struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	MonitorId         string                 `protobuf:"bytes,1,opt,name=monitor_id,json=monitorId,proto3" json:"monitor_id,omitempty"`
	Url               string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	AvgResponseTimeMs float64                `protobuf:"fixed64,3,opt,name=avg_response_time_ms,json=avgResponseTimeMs,proto3" json:"avg_response_time_ms,omitempty"`
	P95ResponseTimeMs float64                `protobuf:"fixed64,4,opt,name=p95_response_time_ms,json=p95ResponseTimeMs,proto3" json:"p95_response_time_ms,omitempty"`
	P99ResponseTimeMs float64                `protobuf:"fixed64,5,opt,name=p99_response_time_ms,json=p99ResponseTimeMs,proto3" json:"p99_response_time_ms,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *MonitorPerformance) Reset() {
	*x = MonitorPerformance{}
	mi := &file_openseer_v1_dashboard_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonitorPerformance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorPerformance) ProtoMessage() {}

func (x *MonitorPerformance) ProtoReflect() protoreflect.Message {
	mi := &file_openseer_v1_dashboard_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorPerformance.ProtoReflect.Descriptor instead.
func (*MonitorPerformance) Descriptor() ([]byte, []int) {
	return file_openseer_v1_dashboard_proto_rawDescGZIP(), []int{4}
}

func (x *MonitorPerformance) GetMonitorId() string {
	if x != nil {
		return x.MonitorId
	}
	return ""
}

func (x *MonitorPerformance) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MonitorPerformance) GetAvgResponseTimeMs() float64 {
	if x != nil {
		return x.AvgResponseTimeMs
	}
	return 0
}

func (x *MonitorPerformance) GetP95ResponseTimeMs() float64 {
	if x != nil {
		return x.P95ResponseTimeMs
	}
	return 0
}

func (x *MonitorPerformance) GetP99ResponseTimeMs() float64 {
	if x != nil {
		return x.P99ResponseTimeMs
	}
	return 0
}

var File_openseer_v1_dashboard_proto protoreflect.FileDescriptor

const file_openseer_v1_dashboard_proto_rawDesc = "" +
	"\n" +
	"\x1bopenseer/v1/dashboard.proto\x12\vopenseer.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\x1d\n" +
	"\x1bGetDashboardOverviewRequest\"Z\n" +
	"\x1cGetDashboardOverviewResponse\x12:\n" +
	"\boverview\x18\x01 \x01(\v2\x1e.openseer.v1.DashboardOverviewR\boverview\"\xfd\x03\n" +
	"\x11DashboardOverview\x12%\n" +
	"\x0etotal_monitors\x18\x01 \x01(\x03R\rtotalMonitors\x12)\n" +
	"\x10enabled_monitors\x18\x02 \x01(\x03R\x0fenabledMonitors\x12+\n" +
	"\x11disabled_monitors\x18\x03 \x01(\x03R\x10disabledMonitors\x12)\n" +
	"\x10healthy_monitors\x18\x04 \x01(\x03R\x0fhealthyMonitors\x12-\n" +
	"\x12unhealthy_monitors\x18\x05 \x01(\x03R\x11unhealthyMonitors\x12$\n" +
	"\x0etotal_runs_24h\x18\x06 \x01(\x03R\ftotalRuns24h\x12&\n" +
	"\x0ffailed_runs_24h\x18\a \x01(\x03R\rfailedRuns24h\x120\n" +
	"\x14overall_success_rate\x18\b \x01(\x01R\x12overallSuccessRate\x12C\n" +
	"\x0frecent_failures\x18\t \x03(\v2\x1a.openseer.v1.MonitorStatusR\x0erecentFailures\x12J\n" +
	"\x10slowest_monitors\x18\n" +
	" \x03(\v2\x1f.openseer.v1.MonitorPerformanceR\x0fslowestMonitors\"\xbc\x01\n" +
	"\rMonitorStatus\x12\x1d\n" +
	"\n" +
	"monitor_id\x18\x01 \x01(\tR\tmonitorId\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12=\n" +
	"\flast_failure\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\vlastFailure\x12#\n" +
	"\rerror_message\x18\x05 \x01(\tR\ferrorMessage\"\xd8\x01\n" +
	"\x12MonitorPerformance\x12\x1d\n" +
	"\n" +
	"monitor_id\x18\x01 \x01(\tR\tmonitorId\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12/\n" +
	"\x14avg_response_time_ms\x18\x03 \x01(\x01R\x11avgResponseTimeMs\x12/\n" +
	"\x14p95_response_time_ms\x18\x04 \x01(\x01R\x11p95ResponseTimeMs\x12/\n" +
	"\x14p99_response_time_ms\x18\x05 \x01(\x01R\x11p99ResponseTimeMs2\x81\x01\n" +
	"\x10DashboardService\x12m\n" +
	"\x14GetDashboardOverview\x12(.openseer.v1.GetDashboardOverviewRequest\x1a).openseer.v1.GetDashboardOverviewResponse\"\x00B7Z5github.com/crisog/openseer/gen/openseer/v1;openseerv1b\x06proto3"

var (
	file_openseer_v1_dashboard_proto_rawDescOnce sync.Once
	file_openseer_v1_dashboard_proto_rawDescData []byte
)

func file_openseer_v1_dashboard_proto_rawDescGZIP() []byte {
	file_openseer_v1_dashboard_proto_rawDescOnce.Do(func() {
		file_openseer_v1_dashboard_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_openseer_v1_dashboard_proto_rawDesc), len(file_openseer_v1_dashboard_proto_rawDesc)))
	})
	return file_openseer_v1_dashboard_proto_rawDescData
}

var file_openseer_v1_dashboard_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_openseer_v1_dashboard_proto_goTypes = []any{
	(*GetDashboardOverviewRequest)(nil),  // 0: openseer.v1.GetDashboardOverviewRequest
	(*GetDashboardOverviewResponse)(nil), // 1: openseer.v1.GetDashboardOverviewResponse
	(*DashboardOverview)(nil),            // 2: openseer.v1.DashboardOverview
	(*MonitorStatus)(nil),                // 3: openseer.v1.MonitorStatus
	(*MonitorPerformance)(nil),           // 4: openseer.v1.MonitorPerformance
	(*timestamppb.Timestamp)(nil),        // 5: google.protobuf.Timestamp
}
var file_openseer_v1_dashboard_proto_depIdxs = []int32{
	2, // 0: openseer.v1.GetDashboardOverviewResponse.overview:type_name -> openseer.v1.DashboardOverview
	3, // 1: openseer.v1.DashboardOverview.recent_failures:type_name -> openseer.v1.MonitorStatus
	4, // 2: openseer.v1.DashboardOverview.slowest_monitors:type_name -> openseer.v1.MonitorPerformance
	5, // 3: openseer.v1.MonitorStatus.last_failure:type_name -> google.protobuf.Timestamp
	0, // 4: openseer.v1.DashboardService.GetDashboardOverview:input_type -> openseer.v1.GetDashboardOverviewRequest
	1, // 5: openseer.v1.DashboardService.GetDashboardOverview:output_type -> openseer.v1.GetDashboardOverviewResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_openseer_v1_dashboard_proto_init() }
func file_openseer_v1_dashboard_proto_init() {
	if File_openseer_v1_dashboard_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_openseer_v1_dashboard_proto_rawDesc), len(file_openseer_v1_dashboard_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_openseer_v1_dashboard_proto_goTypes,
		DependencyIndexes: file_openseer_v1_dashboard_proto_depIdxs,
		MessageInfos:      file_openseer_v1_dashboard_proto_msgTypes,
	}.Build()
	File_openseer_v1_dashboard_proto = out.File
	file_openseer_v1_dashboard_proto_goTypes = nil
	file_openseer_v1_dashboard_proto_depIdxs = nil
}
