// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: openseer/v1/user.proto

package openseerv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetUserProfileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserProfileRequest) Reset() {
	*x = GetUserProfileRequest{}
	mi := &file_openseer_v1_user_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserProfileRequest) ProtoMessage() {}

func (x *GetUserProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_openseer_v1_user_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserProfileRequest.ProtoReflect.Descriptor instead.
func (*GetUserProfileRequest) Descriptor() ([]byte, []int) {
	return file_openseer_v1_user_proto_rawDescGZIP(), []int{0}
}

type GetUserProfileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	User          *User                  `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserProfileResponse) Reset() {
	*x = GetUserProfileResponse{}
	mi := &file_openseer_v1_user_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserProfileResponse) ProtoMessage() {}

func (x *GetUserProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_openseer_v1_user_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserProfileResponse.ProtoReflect.Descriptor instead.
func (*GetUserProfileResponse) Descriptor() ([]byte, []int) {
	return file_openseer_v1_user_proto_rawDescGZIP(), []int{1}
}

func (x *GetUserProfileResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetUserProfileResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email         string                 `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Image         *string                `protobuf:"bytes,4,opt,name=image,proto3,oneof" json:"image,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_openseer_v1_user_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_openseer_v1_user_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_openseer_v1_user_proto_rawDescGZIP(), []int{2}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetImage() string {
	if x != nil && x.Image != nil {
		return *x.Image
	}
	return ""
}

func (x *User) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *User) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_openseer_v1_user_proto protoreflect.FileDescriptor

const file_openseer_v1_user_proto_rawDesc = "" +
	"\n" +
	"\x16openseer/v1/user.proto\x12\vopenseer.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\x17\n" +
	"\x15GetUserProfileRequest\"Y\n" +
	"\x16GetUserProfileResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12%\n" +
	"\x04user\x18\x02 \x01(\v2\x11.openseer.v1.UserR\x04user\"\xdb\x01\n" +
	"\x04User\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05email\x18\x02 \x01(\tR\x05email\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x19\n" +
	"\x05image\x18\x04 \x01(\tH\x00R\x05image\x88\x01\x01\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAtB\b\n" +
	"\x06_image2j\n" +
	"\vUserService\x12[\n" +
	"\x0eGetUserProfile\x12\".openseer.v1.GetUserProfileRequest\x1a#.openseer.v1.GetUserProfileResponse\"\x00B7Z5github.com/crisog/openseer/gen/openseer/v1;openseerv1b\x06proto3"

var (
	file_openseer_v1_user_proto_rawDescOnce sync.Once
	file_openseer_v1_user_proto_rawDescData []byte
)

func file_openseer_v1_user_proto_rawDescGZIP() []byte {
	file_openseer_v1_user_proto_rawDescOnce.Do(func() {
		file_openseer_v1_user_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_openseer_v1_user_proto_rawDesc), len(file_openseer_v1_user_proto_rawDesc)))
	})
	return file_openseer_v1_user_proto_rawDescData
}

var file_openseer_v1_user_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_openseer_v1_user_proto_goTypes = []any{
	(*GetUserProfileRequest)(nil),  // 0: openseer.v1.GetUserProfileRequest
	(*GetUserProfileResponse)(nil), // 1: openseer.v1.GetUserProfileResponse
	(*User)(nil),                   // 2: openseer.v1.User
	(*timestamppb.Timestamp)(nil),  // 3: google.protobuf.Timestamp
}
var file_openseer_v1_user_proto_depIdxs = []int32{
	2, // 0: openseer.v1.GetUserProfileResponse.user:type_name -> openseer.v1.User
	3, // 1: openseer.v1.User.created_at:type_name -> google.protobuf.Timestamp
	3, // 2: openseer.v1.User.updated_at:type_name -> google.protobuf.Timestamp
	0, // 3: openseer.v1.UserService.GetUserProfile:input_type -> openseer.v1.GetUserProfileRequest
	1, // 4: openseer.v1.UserService.GetUserProfile:output_type -> openseer.v1.GetUserProfileResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_openseer_v1_user_proto_init() }
func file_openseer_v1_user_proto_init() {
	if File_openseer_v1_user_proto != nil {
		return
	}
	file_openseer_v1_user_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_openseer_v1_user_proto_rawDesc), len(file_openseer_v1_user_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_openseer_v1_user_proto_goTypes,
		DependencyIndexes: file_openseer_v1_user_proto_depIdxs,
		MessageInfos:      file_openseer_v1_user_proto_msgTypes,
	}.Build()
	File_openseer_v1_user_proto = out.File
	file_openseer_v1_user_proto_goTypes = nil
	file_openseer_v1_user_proto_depIdxs = nil
}
